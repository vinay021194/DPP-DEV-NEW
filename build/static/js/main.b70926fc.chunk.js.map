{"version":3,"sources":["components/AppMenu.jsx","components/MaterialOverview.jsx","components/Materialdatachart.jsx","components/CostDriversAnalysis.jsx","components/LoginPage.jsx","components/Orderingplant.jsx","components/Inventory.jsx","App.js","reportWebVitals.js","index.js","components/AppTopbar.jsx","services/ProductService.js","services/ProcService.js","components/SupplierAnalysis.jsx"],"names":["AppMenu","props","useState","cities","setCities","selectedCities1","setSelectedCities1","selectedState1","setSelectedState1","selectedTown1","setSelectedTown1","onCityChange","e","selectedCities","checked","push","value","splice","indexOf","className","style","marginLeft","fontSize","fontFamily","color","inputId","onChange","includes","marginRight","htmlFor","options","name","optionLabel","placeholder","maxSelectedLabels","MaterialOverview","products","setProducts","expandedRows","setExpandedRows","isMounted","useRef","productService","ProductService","layoutMode","layoutColorMode","staticMenuInactive","setStaticMenuInactive","overlayMenuActive","setOverlayMenuActive","mobileMenuActive","setMobileMenuActive","selectedPlant","setSelectedPlant","menuClick","useEffect","current","getMaterialInfo","then","data","isDesktop","window","innerWidth","sidebarClassName","classNames","sidebar","history","useHistory","logo","wrapperClass","header","fontWeight","statusOrderBodyTemplate","rowData","plant","toLowerCase","status_level_plant","onClick","event","AppTopbar","onToggleMenu","prevState","preventDefault","onRowToggle","responsiveLayout","rowExpansionTemplate","expend","selection","onSelectionChange","dataKey","rows","paginatorTemplate","currentPageReportTemplate","selectionMode","field","sortable","body","expander","width","backgroundColor","status_level_material","display","justifyContent","href","label","margin","console","log","CSSTransition","timeout","enter","exit","in","unmountOnExit","ref","cursor","alt","src","Materialdatachart","products2","setProducts2","products3","setProducts3","demandInfoRegressionSummaryTable","setdemandInfoRegressionSummaryTable","HistoricalConsumptionSeriesData","setHistoricalConsumptionSeriesData","Plants","setPlants","plantData","Map","map","item","values","ele","filteredData","el","milliseconds","Date","period","getTime","executedOn","executed_on","x","y","Number","quantity","total_cons_converted_mp_level","period_type","filter","plotBandsStart","getMilliseconds","plotBandsEnd","Math","min","max","date1","setDate1","date2","setDate2","chart3","chart","zoomType","title","text","subtitle","yAxis","xAxis","plotBands","from","to","type","legend","layout","align","verticalAlign","tooltip","formatter","this","point","toUTCString","series","plotOptions","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","demantData","Sheet1","getInventoryInfo","getMaterial","headers","header2","header3","Sheet3","onRowExpand","onRowCollapse","orders","status_level_inventory","id","showIcon","convertedData","exampleData","sr","chartData1","i","highcharts","Highcharts","showGridlines","CostDriversAnalysis","costDriverSeriesData","setcostDriverSeriesData","icisForecastSummaryTable","seticisForecastSummaryTable","costDriver","setcostDriver","costDriverSeries","setcostDriverSeries","source","setSource","seriesdropdown","setDropdown","AccuraciesTableData","setAccuraciesTableData","setdemandRegressionSummaryTable2","seriesName","code","getIcisForecastSummaryTable2","modifieData","Sheet","key","best_model","top_influencers","replaceAll","split","fifth_month_accuracy","toFixed","first_month_accuracy","fourth_month_accuracy","second_month_accuracy","sixth_month_accuracy","test_month_accuracy","third_month_accuracy","serial_name","material","date","getdemandRegressionSummaryTable2","costDriverAnalysisChart","valueDecimals","allseries","some","Set","result","o","icisForecastSummaryTabledata","allmaterial","d","join","price","filterAccuraciesTableData","concat","LoginPage","data-validate","Orderingplant","supplierData","setsupplierData","setplantData","plantJsonData","supplierJsonData","Inventory","supplierObject","setsupplierObject","location","state","supplierDetails","getplantdata","header1","header5","App","path","exact","component","SupplierAnalysis","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","padding","height","fetch","res","json","ProcService","params","axios","get","catch","message","Sheet2","emptyProduct","quality","Material_Number","Composition","Percentage","Onsave","SubmitValueselectedCity1","handleData","selectedCity1","setState","target","optimize","onPlantChange","procService","getHistoricalUnitPrice","resData","dataHistorical","filterByPlantData","unitPriceUSD","posting_date","unit_price_usd","chartData","slice","HistoricalChartData","leadTime","productKey","onValueChange","onEditorValueChange","convertData","suppliers","forecastedObj","leadTimeObj","supplierMaxCapacity","month1","month2","month3","month4","month5","month6","ForecastedData","regex","indices","p","startIndex","lastIndex","substring","str","exec","index","seriesname","duplicate","duplicateSeriesArr","strArr","avgMonthData","weeklyValues","shift","eval","count","materialCostDriverOutput","materialInfo","countries","product","productDialog","deleteProductDialog","deleteProductsDialog","selectedProducts","submitted","globalFilter","filteredCountries","selectedCity2","filteredCities","plants","supplierFormula","supplierFormulaData","searchCountry","bind","editingCellRows","originalRows","saveProduct","hideDialog","openNew","actionBodyTemplate","editProduct","confirmDeleteProduct","deleteProduct","onInputChange","onRowEditInit","onRowEditCancel","onRowEditCancel2","onRowEditChange","onInputNumberChange","hideDeleteProductDialog","hideDeleteProductsDialog","getMaterialCostDriverOutput","getIcisForecastSummaryTable","setTimeout","query","trim","length","country","startsWith","updatedProducts","rowIndex","statuses","optionValue","itemTemplate","option","inputTextEditor","columnProps","originalRows2","products4","editingRows","findIndexById","toast","show","severity","summary","detail","life","createId","image","chars","charAt","floor","random","val","supplier_name","capacity","formulae","lead_time_months","Fragment","icon","months","month","getMonth","year","getFullYear","InventoryInfo","icisForecastErrorInfoUpdated","supplier","forcastSeriesData","forecastedSupplierPriceOpthin","categories","productDialogFooter","deleteProductDialogFooter","deleteProductsDialogFooter","deleteSelectedProducts","historicalPricesOpthion","paginator","rowsPerPageOptions","editMode","editor","nameEditor","quatityEditor","priceEditor","rowEditor","float","oncostDriverSeriesChange","visible","modal","footer","onHide","required","autoFocus","Component"],"mappings":"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","file":"static/js/main.b70926fc.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport classNames from \"classnames\";\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { color } from \"highcharts\";\r\n// const AppSubmenu = (props) => {\r\n//   const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n//   const onMenuItemClick = (event, item, index) => {\r\n//     //avoid processing disabled items\r\n//     if (item.disabled) {\r\n//       event.preventDefault();\r\n//       return true;\r\n//     }\r\n\r\n//     //execute command\r\n//     if (item.command) {\r\n//       item.command({ originalEvent: event, item: item });\r\n//     }\r\n\r\n//     if (index === activeIndex) setActiveIndex(null);\r\n//     else setActiveIndex(index);\r\n\r\n//     if (props.onMenuItemClick) {\r\n//       props.onMenuItemClick({\r\n//         originalEvent: event,\r\n//         item: item,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const renderLinkContent = (item) => {\r\n//     let submenuIcon = item.items && (\r\n//       <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>\r\n//     );\r\n//     let badge = item.badge && (\r\n//       <span className=\"menuitem-badge\">{item.badge}</span>\r\n//     );\r\n\r\n//     return (\r\n//       <React.Fragment>\r\n//         <i className={item.icon}></i>\r\n//         <span>{item.label}</span>\r\n//         {submenuIcon}\r\n//         {badge}\r\n//       </React.Fragment>\r\n//     );\r\n//   };\r\n\r\n//   const renderLink = (item, i) => {\r\n//     let content = renderLinkContent(item);\r\n\r\n//     if (item.to) {\r\n//       return (\r\n//         <NavLink\r\n//           activeClassName=\"active-route\"\r\n//           to={item.to}\r\n//           onClick={(e) => onMenuItemClick(e, item, i)}\r\n//           exact\r\n//           target={item.target}\r\n//         >\r\n//           {content}\r\n//         </NavLink>\r\n//       );\r\n//     } else {\r\n//       return (\r\n//         <a\r\n//           href={item.url}\r\n//           onClick={(e) => onMenuItemClick(e, item, i)}\r\n//           target={item.target}\r\n//         >\r\n//           {content}\r\n//         </a>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   let items =\r\n//     props.items &&\r\n//     props.items.map((item, i) => {\r\n//       let active = activeIndex === i;\r\n//       let styleClass = classNames(item.badgeStyleClass, {\r\n//         \"active-menuitem\": active && !item.to,\r\n//       });\r\n\r\n//       return (\r\n//         <li className={styleClass} key={i}>\r\n//           {item.items && props.root === true && <div className=\"arrow\"></div>}\r\n//           {renderLink(item, i)}\r\n//           <CSSTransition\r\n//             classNames=\"p-toggleable-content\"\r\n//             timeout={{ enter: 1000, exit: 450 }}\r\n//             in={active}\r\n//             unmountOnExit\r\n//           >\r\n//             <AppSubmenu\r\n//               items={item.items}\r\n//               onMenuItemClick={props.onMenuItemClick}\r\n//             />\r\n//           </CSSTransition>\r\n//         </li>\r\n//       );\r\n//     });\r\n\r\n//   return items ? <ul className={props.className}>{items}</ul> : null;\r\n// };\r\n\r\nexport const AppMenu = (props) => {\r\n  const [cities, setCities] = useState([]);\r\n  \r\n  const [selectedCities1, setSelectedCities1] = useState(null);\r\n  const [selectedState1, setSelectedState1] = useState(null);\r\n  const [selectedTown1, setSelectedTown1] = useState(null);\r\n  const city = [\r\n    { name: '700215',  },\r\n    { name: '700154', },\r\n    { name: '700354',  },\r\n    { name: '700547',  },\r\n    { name: '700963',  }\r\n];\r\nconst state = [\r\n  { name: '700215',  },\r\n  { name: '700154', },\r\n  { name: '700354',  },\r\n  { name: '700547',  },\r\n  { name: '700963',  }\r\n];\r\nconst town = [\r\n  { name: '700215',  },\r\n  { name: '700154', },\r\n  { name: '700354',  },\r\n  { name: '700547',  },\r\n  { name: '700963',  }\r\n];\r\n \r\n\r\n\r\n  const onCityChange = (e) => {\r\n    let selectedCities = [...cities];\r\n    if(e.checked)\r\n        selectedCities.push(e.value);\r\n    else\r\n        selectedCities.splice(selectedCities.indexOf(e.value), 1);\r\n\r\n    setCities(selectedCities);\r\n}\r\n  return (\r\n    <div className=\"layout-menu-container\">\r\n      <div style={{marginLeft:'50px', fontSize:'25px' ,fontFamily:'Poppins', color:'lightgray'}} >\r\n      <span>Filter By</span>\r\n      </div>\r\n      <hr/>\r\n     \r\n      <div style={{marginLeft:'25px' ,fontFamily:'Poppins'}}>\r\n        <strong>Material status</strong>\r\n        </div>\r\n     <div className=\"gridcheck\">\r\n    <Checkbox inputId=\"cb1\" value=\"Urgent\" onChange={onCityChange} checked={cities.includes('Urgent')} style={{marginRight:'15px'}}></Checkbox>\r\n    <label htmlFor=\"cb1\" className=\"p-checkbox-label\">Urgent</label>\r\n   \r\n</div>\r\n<div className=\"gridcheck\">\r\n    <Checkbox inputId=\"cb2\" value=\"Depleting fast\" onChange={onCityChange} checked={cities.includes('Depleting fast')}  style={{marginRight:'15px'}}></Checkbox>\r\n    <label htmlFor=\"cb2\" className=\"p-checkbox-label\">Depleting fast</label>\r\n\r\n\r\n</div>\r\n<div className=\"gridcheck\">\r\n    <Checkbox inputId=\"cb3\" value=\"Sufficient\" onChange={onCityChange} checked={cities.includes('Sufficient')}  style={{marginRight:'15px'}}></Checkbox>\r\n    <label htmlFor=\"cb3\" className=\"p-checkbox-label\">Sufficient</label>\r\n    \r\n</div>\r\n<hr/>\r\n<div style={{marginLeft:'25px',fontFamily:'Poppins'}}>\r\n        <strong>Material ID</strong>\r\n        </div>\r\n<div className=\"gridcol\">\r\n<MultiSelect value={selectedCities1} options={city} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\"name\" placeholder=\"Select ID\" maxSelectedLabels={5}  />\r\n  </div>\r\n  <hr/>\r\n  <div style={{marginLeft:'25px',fontFamily:'Poppins'}}>\r\n        <strong>Plant ID</strong>\r\n        </div>\r\n  <div className=\"gridcol\">\r\n<MultiSelect value={selectedState1} options={state} onChange={(e) => setSelectedState1(e.value)} optionLabel=\"name\" placeholder=\"Select ID\" maxSelectedLabels={5} />\r\n  </div>\r\n  <hr/>\r\n  <div style={{marginLeft:'25px',fontFamily:'Sans-serif'}}>\r\n        <strong>Tags</strong>\r\n        </div>\r\n  <div className=\"gridcol\">\r\n<MultiSelect value={selectedTown1} options={town} onChange={(e) => setSelectedTown1(e.value)} optionLabel=\"name\" placeholder=\"SELECT ID\" maxSelectedLabels={5} />\r\n  </div>\r\n \r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Column } from \"primereact/column\";\r\nimport { ProductService } from \"../services/ProductService\";\r\nimport { Button } from \"primereact/button\";\r\nimport \"./App.css\";\r\nimport { AppMenu } from \"../components/AppMenu\";\r\nimport { AppTopbar } from \"../components/AppTopbar\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport const MaterialOverview = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [expandedRows, setExpandedRows] = useState(null);\r\n  //const toast = useRef(null);\r\n  const isMounted = useRef(false);\r\n  const productService = new ProductService();\r\n\r\n  const [layoutMode, setLayoutMode] = useState(\"static\");\r\n  const [layoutColorMode, setLayoutColorMode] = useState(\"dark\");\r\n  const [staticMenuInactive, setStaticMenuInactive] = useState(false);\r\n  const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n  const [mobileMenuActive, setMobileMenuActive] = useState(false);\r\n  const [selectedPlant, setSelectedPlant] = useState(null);\r\n  let menuClick = false;\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      //const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\r\n      //toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\r\n    }\r\n  }, [expandedRows]);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    // productService.getProductsWithOrdersSmall().then(data => setProducts(data));\r\n    productService.getMaterialInfo().then((data) => {\r\n      return setProducts(data);\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onSidebarClick = () => {\r\n    menuClick = true;\r\n  };\r\n\r\n  const isSidebarVisible = () => {\r\n    if (isDesktop()) {\r\n      if (layoutMode === \"static\") return !staticMenuInactive;\r\n      else if (layoutMode === \"overlay\") return overlayMenuActive;\r\n      else return true;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const isDesktop = () => {\r\n    return window.innerWidth > 1024;\r\n  };\r\n\r\n  const sidebarClassName = classNames(\"layout-sidebar\", {\r\n    \"layout-sidebar-dark\": layoutColorMode === \"dark\",\r\n    \"layout-sidebar-light\": layoutColorMode === \"light\",\r\n  });\r\n\r\n  const sidebar = useRef();\r\n  const history = useHistory();\r\n  const logo =\r\n    layoutColorMode === \"dark\"\r\n      ? \"assets/layout/images/logo-white.svg\"\r\n      : \"assets/layout/images/logo.svg\";\r\n\r\n  const wrapperClass = classNames(\"layout-wrapper\", {\r\n    \"layout-overlay\": layoutMode === \"overlay\",\r\n    \"layout-static\": layoutMode === \"static\",\r\n    \"layout-static-sidebar-inactive\":\r\n      staticMenuInactive && layoutMode === \"static\",\r\n    \"layout-overlay-sidebar-active\":\r\n      overlayMenuActive && layoutMode === \"overlay\",\r\n    \"layout-mobile-sidebar-active\": mobileMenuActive,\r\n    // \"p-input-filled\": inputStyle === \"filled\",\r\n    // \"p-ripple-disabled\": ripple === false,\r\n  });\r\n\r\n  const onToggleMenu = (event) => {\r\n    menuClick = true;\r\n\r\n    if (isDesktop()) {\r\n      if (layoutMode === \"overlay\") {\r\n        setOverlayMenuActive((prevState) => !prevState);\r\n      } else if (layoutMode === \"static\") {\r\n        setStaticMenuInactive((prevState) => !prevState);\r\n      }\r\n    } else {\r\n      setMobileMenuActive((prevState) => !prevState);\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onWrapperClick = (event) => {\r\n    if (!menuClick) {\r\n      setOverlayMenuActive(false);\r\n      setMobileMenuActive(false);\r\n    }\r\n    menuClick = false;\r\n  };\r\n\r\n  const header = (\r\n    <div className=\"table-header-container\">\r\n      <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>\r\n        Material Overview\r\n      </h5>\r\n    </div>\r\n  );\r\n\r\n  const statusOrderBodyTemplate = (rowData) => {\r\n    return (\r\n      <span\r\n        className={`product-badge status-${rowData.plant.toLowerCase()}`}\r\n      >\r\n        {rowData.status_level_plant}\r\n      </span>\r\n    );\r\n  };\r\n  const statusBodyTemplate = (data) => {\r\n    return <span style={{backgroundColor:'#FF8064'}} >{data.status_level_material}</span>\r\n}\r\n\r\n  const next = () => {\r\n    console.log(\"selectedPlant====>\", selectedPlant);\r\n    props.history.push(\"/Materialdatachart\", {\r\n      selectedPlant: selectedPlant,\r\n    });\r\n  };\r\n\r\n  const rowExpansionTemplate = (data) => {\r\n    return (\r\n      <div className=\"orders-subtable\">\r\n        <DataTable\r\n          value={data.expend}\r\n          responsiveLayout=\"scroll\"\r\n          selection={selectedPlant}\r\n          onSelectionChange={(e) => setSelectedPlant(e.value)}\r\n          dataKey=\"plant\"\r\n          //paginator\r\n          rows={10}\r\n         // rowsPerPageOptions={[5, 10, 25]}\r\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n          currentPageReportTemplate=\" {first} to {last} of {totalRecords}\"\r\n        >\r\n          <Column\r\n            selectionMode=\"multiple\"\r\n            // field=\"focus\"\r\n            // header=\"Focus\"\r\n            // sortable\r\n          ></Column>\r\n          \r\n          <Column field=\"plant\" header=\"ID\" sortable></Column>\r\n          <Column field=\"plant_name\" header=\"Name\" sortable></Column>\r\n          <Column\r\n            field=\"status_level_plant\"\r\n            header=\"Status\"\r\n            sortable\r\n            body={statusOrderBodyTemplate}\r\n          ></Column>\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={wrapperClass} onClick={onWrapperClick}>\r\n      <AppTopbar onToggleMenu={onToggleMenu} />\r\n      <div className=\"layout-main\">\r\n        <div className=\"card\">\r\n          {}\r\n          <DataTable\r\n            value={products}\r\n            expandedRows={expandedRows}\r\n            onRowToggle={(e) => setExpandedRows(e.data)}\r\n            responsiveLayout=\"scroll\"\r\n            rowExpansionTemplate={rowExpansionTemplate}\r\n            dataKey=\"\"\r\n            header={header}\r\n            //paginator\r\n            rows={10}\r\n           // rowsPerPageOptions={[5, 10, 25]}\r\n            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n            currentPageReportTemplate=\" {first} to {last} of {totalRecords}\"\r\n          >\r\n            <Column expander style={{ width: \"3em\" }} />\r\n            <Column field=\"material\" header=\"ID\" sortable></Column>\r\n            <Column\r\n              field=\"material_description_1\"\r\n              header=\"Name\"\r\n              sortable\r\n            ></Column>\r\n            <Column field=\"opening_stock\" header=\"Inventory\" sortable />\r\n            <Column field=\"status_level_material\" header=\"Status\" sortable body={statusBodyTemplate}/>\r\n          </DataTable>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <a href=\"Materialdatachart\">\r\n            <Button\r\n            className='nextbutton'\r\n              label=\"Next \"\r\n              style={{ margin: \"3px 15px\" }}\r\n              onClick={next}\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <CSSTransition\r\n        classNames=\"layout-sidebar\"\r\n        timeout={{ enter: 200, exit: 200 }}\r\n        in={isSidebarVisible()}\r\n        unmountOnExit\r\n      >\r\n        <div\r\n          ref={sidebar}\r\n          className={sidebarClassName}\r\n          onClick={onSidebarClick}\r\n        >\r\n          <div\r\n            className=\"layout-logo\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => history.push(\"/\")}\r\n          >\r\n            <img\r\n              alt=\"Logo\"\r\n              src={logo}\r\n              style={{\r\n                width: \"200px\",\r\n                margin: \"0px 0px 15px 0px\",\r\n              }}\r\n            />\r\n          </div>\r\n          <AppMenu />\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { ProductService } from \"../services/ProductService\";\r\nimport { Button } from \"primereact/button\";\r\nimport \"./App.css\";\r\nimport { AppTopbar } from \"./AppTopbar\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { MultiSelect } from \"primereact/multiselect\";\r\nimport demantData from \"../data/demand_info_regression_summary.json\";\r\n\r\nexport const Materialdatachart = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [products2, setProducts2] = useState([]);\r\n  const [products3, setProducts3] = useState([]);\r\n  const [expandedRows, setExpandedRows] = useState(null);\r\n  //const toast = useRef(null);\r\n  const isMounted = useRef(false);\r\n  const productService = new ProductService();\r\n  const [layoutMode, setLayoutMode] = useState(\"static\");\r\n  const [layoutColorMode, setLayoutColorMode] = useState(\"dark\");\r\n  const [staticMenuInactive, setStaticMenuInactive] = useState(false);\r\n  const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n  const [mobileMenuActive, setMobileMenuActive] = useState(false);\r\n  const [\r\n    demandInfoRegressionSummaryTable,\r\n    setdemandInfoRegressionSummaryTable,\r\n  ] = useState([]);\r\n  const [HistoricalConsumptionSeriesData, setHistoricalConsumptionSeriesData] =\r\n    useState([]);\r\n  const [Plants, setPlants] = useState(false);\r\n\r\n  let plantData = [\r\n    ...new Map(\r\n      demandInfoRegressionSummaryTable.map((item) => [item[\"plant\"], item])\r\n    ).values(),\r\n  ];\r\n  plantData = plantData.map((ele) => {\r\n    return { label: ele.plant, value: ele.plant };\r\n  });\r\n\r\n  let convertedData = demandInfoRegressionSummaryTable.map((el) => {\r\n    let date = new Date(el.period);\r\n    let milliseconds = date.getTime();\r\n    return {\r\n      executedOn: el.executed_on,\r\n      plant: el.plant,\r\n      x: milliseconds,\r\n      y: Number(el.quantity),\r\n      total_cons_converted_mp_level: el.total_cons_converted_mp_level,\r\n      period_type: el.period_type,\r\n    };\r\n  });\r\n\r\n  let filteredData = convertedData.filter(\r\n    (ele) => ele.period_type === \"Forecast\"\r\n  );\r\n\r\n  let plotBandsStart = new Date().getMilliseconds();\r\n  let plotBandsEnd = new Date().getMilliseconds();\r\n  plotBandsStart = Math.min(...filteredData.map((item) => item.x));\r\n  plotBandsEnd = Math.max(...filteredData.map((item) => item.x));\r\n\r\n  const [date1, setDate1] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  let menuClick = false;\r\n\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"spline\",\r\n    },\r\n    title: {\r\n      text: \"My chart\",\r\n    },\r\n    series: [\r\n      {\r\n        data: [1, 3, 2, 7, 5, 11, 9],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chart3 = {\r\n    chart: {\r\n      zoomType: \"x\",\r\n    },\r\n\r\n    title: {\r\n      text: \" \",\r\n    },\r\n    subtitle: {\r\n      // text: \"Source: thesolarfoundation.com\",\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: \"Quantity\",\r\n      },\r\n    },\r\n    xAxis: {\r\n      title: {\r\n        text: \"Period\",\r\n      },\r\n      plotBands: [\r\n        {\r\n          color: \"#C8FDFB\",\r\n          from: plotBandsStart,\r\n          to: plotBandsEnd,\r\n        },\r\n      ],\r\n\r\n      type: \"datetime\",\r\n    },\r\n    legend: {\r\n      layout: \"horizontal\",\r\n      align: \"center\",\r\n      verticalAlign: \"bottom\",\r\n    },\r\n    tooltip: {\r\n      //layout: 'horizontal',\r\n      //align: 'center',\r\n      //verticalAlign: 'bottom',\r\n      formatter: function () {\r\n        return (\r\n          \"Color :  <b>\" +\r\n          this.point.color +\r\n          \"</b> </br> Executed on :  <b>\" +\r\n          this.point.executedOn +\r\n          \"</b> </br>  Period : <b>\" +\r\n          new Date(this.x).toUTCString() +\r\n          \" </b> </br> Plant :  <b>\" +\r\n          this.series.name +\r\n          \"</b> </br> Quantity :  <b>\" +\r\n          this.y +\r\n          \"</b>\"\r\n        );\r\n      },\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        label: {\r\n          connectorAllowed: false,\r\n        },\r\n        pointStart: 2010,\r\n      },\r\n    },\r\n    series: HistoricalConsumptionSeriesData,\r\n    responsive: {\r\n      rules: [\r\n        {\r\n          condition: {\r\n            maxWidth: 500,\r\n          },\r\n          chartOptions: {\r\n            legend: {\r\n              layout: \"horizontal\",\r\n              align: \"center\",\r\n              verticalAlign: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      const summary =\r\n        expandedRows !== null ? \"All Rows Expanded\" : \"All Rows Collapsed\";\r\n      //toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\r\n    }\r\n  }, [expandedRows]);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    productService.getMaterialInfo().then((data) => setProducts(data));\r\n    setdemandInfoRegressionSummaryTable(demantData.Sheet1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    productService.getInventoryInfo().then((data) => setProducts2(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    productService.getMaterial().then((data) => setProducts3(data));\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   isMounted.current = true;\r\n  //   productService.getdemandSummaryTable2().then((data) => setProducts3(data));\r\n  // }, []);\r\n\r\n  const onPlantChange = (e) => {\r\n    setPlants(e.value);\r\n    // console.log(\"demandInfoRegressionSummaryTable====>\",demandInfoRegressionSummaryTable)\r\n    // console.log(\"date1====>\",date1)\r\n    // console.log(\"date2====>\",date2)\r\n\r\n    // let convertedData = demandInfoRegressionSummaryTable.map((el) => {\r\n    //   let date = new Date(el.period);\r\n    //   let milliseconds = date.getTime();\r\n\r\n    //   return {\r\n    //     executedOn: el.executed_on,\r\n    //     plant: el.plant,\r\n    //     x: milliseconds,\r\n    //     y: Number(el.quantity),\r\n    //     total_cons_converted_mp_level: el.total_cons_converted_mp_level,\r\n    //   };\r\n    // });\r\n    // if(date1 && date2){\r\n    //   convertedData = convertedData.filter((data=> new Date(data.executedOn) > new Date(date1) && new Date(data.executedOn) < new Date(date2)))\r\n    // }\r\n    // let exampleData = e.value.map((sr) => convertedData.filter((el) => el.plant === sr));\r\n    // console.log(\"exampleData in map ===>\", exampleData);\r\n\r\n    // const chartData1 = e.value.map((sr, i) => {\r\n    //   return {\r\n    //     name: sr,\r\n    //     data: exampleData[i],\r\n    //   };\r\n    // });\r\n\r\n    setPlants(e.value);\r\n    //setHistoricalConsumptionSeriesData(chartData1);\r\n  };\r\n\r\n  const onsubmit = () => {\r\n    // console.log(\"demandInfoRegressionSummaryTable====>\",demandInfoRegressionSummaryTable)\r\n    // console.log(\"date1====>\",date1)\r\n    // console.log(\"date2====>\",date2)\r\n    //let plantFilterData = demantData.filter(ele=>ele.plant==)\r\n\r\n    let convertedData = demandInfoRegressionSummaryTable.map((el) => {\r\n      let date = new Date(el.period);\r\n      let milliseconds = date.getTime();\r\n\r\n      return {\r\n        executedOn: el.executed_on,\r\n        plant: el.plant,\r\n        x: milliseconds,\r\n        y: Number(el.quantity),\r\n        total_cons_converted_mp_level: el.total_cons_converted_mp_level,\r\n      };\r\n    });\r\n    // console.log(\"convertedData before===>\",convertedData)\r\n    if (date1 && date2) {\r\n      convertedData = convertedData.filter(\r\n        (data) =>\r\n          new Date(data.executedOn) > new Date(date1) &&\r\n          new Date(data.executedOn) < new Date(date2)\r\n      );\r\n    }\r\n    // console.log(\"convertedData after===>\",convertedData)\r\n\r\n    let exampleData = Plants.map((sr) =>\r\n      convertedData.filter((el) => el.plant === sr)\r\n    );\r\n    // console.log(\"exampleData in map ===>\", exampleData);\r\n\r\n    const chartData1 = Plants.map((sr, i) => {\r\n      return {\r\n        name: sr,\r\n        data: exampleData[i],\r\n      };\r\n    });\r\n\r\n    setHistoricalConsumptionSeriesData(chartData1);\r\n  };\r\n\r\n  const onRowExpand = (event) => {\r\n    //toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n  };\r\n\r\n  const onRowCollapse = (event) => {\r\n    // toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n  };\r\n\r\n  const expandAll = () => {\r\n    let _expandedRows = {};\r\n    products.forEach((p) => (_expandedRows[`${p.id}`] = true));\r\n\r\n    setExpandedRows(_expandedRows);\r\n  };\r\n\r\n  const collapseAll = () => {\r\n    setExpandedRows(null);\r\n  };\r\n  const isDesktop = () => {\r\n    return window.innerWidth > 1024;\r\n  };\r\n\r\n  const onToggleMenu = (event) => {\r\n    menuClick = true;\r\n\r\n    if (isDesktop()) {\r\n      if (layoutMode === \"overlay\") {\r\n        setOverlayMenuActive((prevState) => !prevState);\r\n      } else if (layoutMode === \"static\") {\r\n        setStaticMenuInactive((prevState) => !prevState);\r\n      }\r\n    } else {\r\n      setMobileMenuActive((prevState) => !prevState);\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const header = (\r\n    <div className=\"table-header-container\">\r\n      <h5 style={{ fontWeight: \"bolder\", fontFamily: \"poppins\" }}>\r\n        Demand Prediction\r\n      </h5>\r\n    </div>\r\n  );\r\n  const headers = (\r\n    <div className=\"table-header-container\">\r\n      <h5 style={{ fontWeight: \"bolder\", fontFamily: \"poppins\" }}>Inventory</h5>\r\n    </div>\r\n  );\r\n  const header2 = (\r\n    <div className=\"table-header-container\">\r\n      <h5 style={{ fontWeight: \"bolder\", fontFamily: \"poppins\" }}>Plant2000</h5>\r\n    </div>\r\n  );\r\n  const header3 = (\r\n    <div className=\"table-header-container\">\r\n      <h5 style={{ fontWeight: \"bolder\", fontFamily: \"poppins\" }}>Plant3000</h5>\r\n    </div>\r\n  );\r\n  const statusOrderBodyTemplate = (rowData) => {\r\n    return (\r\n      <span className={`products-badge status-${rowData.plant.toLowerCase()}`}>\r\n        {rowData.status_level_inventory}\r\n      </span>\r\n    );\r\n  };\r\n  const rowExpansionTemplate = (data) => {\r\n    return (\r\n      <div className=\"orders-subtable\">\r\n        {/* <h5>Orders for {data.name}</h5> */}\r\n        <DataTable value={data.orders} responsiveLayout=\"scroll\" rows={1}>\r\n          <Column field=\"id\" header=\"Plant Id(Name)\" sortable></Column>\r\n          <Column field=\"name\" header=\"Safety Stock\" sortable></Column>\r\n          <Column field=\"inventory\" header=\"Inventory\" sortable></Column>\r\n          <Column field=\"status\" header=\"WareHouse Capacity\" sortable></Column>\r\n          <Column field=\"status\" header=\"Status\" sortable></Column>\r\n          {/* <Column field=\"\" header=\"\" body={statusOrderBodyTemplate} sortable></Column> */}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppTopbar onToggleMenu={onToggleMenu} />\r\n      {/* <Toast ref={toast} /> */}\r\n      <div className=\"layout-main\">\r\n        <div className=\"card\">\r\n          <DataTable\r\n            value={products3.Sheet3}\r\n            // expandedRows={expandedRows}\r\n            onRowToggle={(e) => setExpandedRows(e.data)}\r\n            onRowExpand={onRowExpand}\r\n            onRowCollapse={onRowCollapse}\r\n            responsiveLayout=\"scroll\"\r\n            rowExpansionTemplate={rowExpansionTemplate}\r\n            dataKey=\"\"\r\n            header={header}\r\n            rows={1}\r\n          >\r\n            <Column style={{ width: \"3em\" }} />\r\n            <Column field=\"material\" header=\"ID\" sortable></Column>\r\n            {/* <Column field=\"Discription\" header=\"Discription\" sortable ></Column> */}\r\n            <Column\r\n              field=\"base_unit_of_measure (UOM)\"\r\n              header=\"UOM\"\r\n              sortable\r\n            ></Column>\r\n            <Column field=\"aliases\" header=\"Aliases\" sortable />\r\n            {/* <Column field=\"Criticality\" header=\"Criticality\" sortable  /> */}\r\n            <Column field=\"material_type (SAP)\" header=\"SAP\" sortable />\r\n            <Column\r\n              field=\"material_group (organisation)\"\r\n              header=\"Organisation\"\r\n              sortable\r\n            />\r\n            <Column field=\"mdrm_class (class)\" header=\"Class\" />\r\n          </DataTable>\r\n        </div>\r\n        <div className=\"card\">\r\n          <DataTable\r\n            value={products2.Sheet3}\r\n            //  expandedRows={expandedRows}\r\n            // onRowToggle={(e) => setExpandedRows(e.data)}\r\n            // onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n            // rowExpansionTemplate={rowExpansionTemplate}\r\n            dataKey=\"id\"\r\n            header={headers}\r\n            rows={4}\r\n          >\r\n            {/* <Column expander style={{ width: '3em' }} /> */}\r\n\r\n            <Column field=\"plant\" header=\"PlantID(Name)\"></Column>\r\n            <Column field=\"safety_stock\" header=\"Safety Stock\"></Column>\r\n            <Column field=\"opening_stock\" header=\"Inventory\" />\r\n            <Column field=\"warehouse_capacity\" header=\"Warehouse capacity\" />\r\n            <Column\r\n              field=\"status_level_inventory\"\r\n              header=\"Status\"\r\n              body={statusOrderBodyTemplate}\r\n            />\r\n          </DataTable>\r\n        </div>\r\n        <div className=\"card\">\r\n          <MultiSelect\r\n            style={{ width: \"49%\", margin: \"5px 10px\" }}\r\n            value={Plants}\r\n            options={plantData}\r\n            onChange={onPlantChange}\r\n            optionLabel=\"label\"\r\n            placeholder=\"Select a Plant\"\r\n            display=\"chip\"\r\n          />\r\n          <strong>From Year</strong>\r\n          <Calendar\r\n            style={{ width: \"15%\", margin: \"5px 10px\" }}\r\n            id=\"icon\"\r\n            showIcon\r\n            value={date1}\r\n            onChange={(e) => setDate1(e.value)}\r\n          />\r\n          <strong>To Year</strong>\r\n          <Calendar\r\n            style={{ width: \"15%\", margin: \"5px 10px\" }}\r\n            id=\"icon\"\r\n            showIcon\r\n            value={date2}\r\n            onChange={(e) => setDate2(e.value)}\r\n          />\r\n          <Button\r\n            label=\"submit\"\r\n            style={{ margin: \"3px 15px\" }}\r\n            onClick={onsubmit}\r\n          />\r\n          <div>\r\n            <HighchartsReact highcharts={Highcharts} options={chart3} />\r\n          </div>\r\n          <div className=\"\">\r\n            <h5\r\n              style={{\r\n                fontWeight: \"bolder\",\r\n                fontFamily: \"poppins\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              Average yearly Consumption\r\n            </h5>\r\n          </div>\r\n          <DataTable\r\n            style={{\r\n              width: \"30%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginLeft: \"35%\",\r\n            }}\r\n            value={products2.Sheet3}\r\n            dataKey=\"id\"\r\n            rows={2}\r\n          >\r\n            <Column field=\"plant\" header=\"\"></Column>\r\n            <Column field=\"safety_stock\" header=\"\" showGridlines></Column>\r\n          </DataTable>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <DataTable\r\n            expander\r\n            value={demantData.Sheet1}\r\n            //  expandedRows={expandedRows}\r\n            // onRowToggle={(e) => setExpandedRows(e.data)}\r\n            // onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n            // rowExpansionTemplate={rowExpansionTemplate}\r\n            dataKey=\"id\"\r\n            header={header2}\r\n            rows={4}\r\n          >\r\n            {/* <Column expander style={{ width: '3em' }} /> */}\r\n            <Column field=\"\" header=\"\"></Column>\r\n            <Column field=\"Discription\" header=\"Jan21\"></Column>\r\n            <Column field=\"UOM\" header=\"Feb21\"></Column>\r\n            <Column field=\"Aliases\" header=\"Mar21\" />\r\n            <Column field=\"Criticality\" header=\"Apr21\" />\r\n            <Column field=\"SAP\" header=\"May21\" />\r\n            <Column field=\"Organisation\" header=\"Jun21\" />\r\n            <Column field=\"Class\" header=\"July21\" />\r\n            <Column field=\"Aliases\" header=\"Aug21\" />\r\n            <Column field=\"Criticality\" header=\"Sep21\" />\r\n            <Column field=\"SAP\" header=\"Oct21\" />\r\n            <Column field=\"Organisation\" header=\"Nov21\" />\r\n            <Column field=\"Class\" header=\"Dec21\" />\r\n          </DataTable>\r\n        </div>\r\n        <div className=\"card\">\r\n          <DataTable\r\n            value={products}\r\n            //  expandedRows={expandedRows}\r\n            //   onRowToggle={(e) => setExpandedRows(e.data)}\r\n            //   onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n            //   rowExpansionTemplate={rowExpansionTemplate}\r\n            dataKey=\"id\"\r\n            header={header3}\r\n            rows={5}\r\n          >\r\n            {/* <Column expander style={{ width: '3em' }} /> */}\r\n            <Column field=\"data\" header=\"\"></Column>\r\n            <Column field=\"Discription\" header=\"Jan21\"></Column>\r\n            <Column field=\"UOM\" header=\"Feb21\"></Column>\r\n            <Column field=\"Aliases\" header=\"Mar21\" />\r\n            <Column field=\"Criticality\" header=\"Apr21\" />\r\n            <Column field=\"SAP\" header=\"May21\" />\r\n            <Column field=\"Organisation\" header=\"Jun21\" />\r\n            <Column field=\"Class\" header=\"July21\" />\r\n            <Column field=\"Aliases\" header=\"Aug21\" />\r\n            <Column field=\"Criticality\" header=\"Sep21\" />\r\n            <Column field=\"SAP\" header=\"Oct21\" />\r\n            <Column field=\"Organisation\" header=\"Nov21\" />\r\n            <Column field=\"Class\" header=\"Dec21\" />\r\n          </DataTable>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <a href=\"/\">\r\n            <Button\r\n              className=\"previousbutton\"\r\n              label=\"Previous \"\r\n              style={{ marginRight: \" 15px\" }}\r\n            />\r\n          </a>\r\n          <a href=\"CostDriversAnalysis\">\r\n            <Button\r\n              className=\"nextbutton\"\r\n              label=\"Next\"\r\n              style={{ marginLeft: \" 15px\" }}\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { ProductService } from \"../services/ProductService\";\r\nimport ProcService from \"../services/ProcService\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Button } from \"primereact/button\";\r\nimport \"./App.css\";\r\nimport { AppMenu } from \"./AppMenu\";\r\nimport { AppTopbar } from \"./AppTopbar\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { MultiSelect } from \"primereact/multiselect\";\r\nexport const CostDriversAnalysis = () => {\r\n  const productService = new ProductService();\r\n  const [layoutMode, setLayoutMode] = useState(\"static\");\r\n  const [layoutColorMode, setLayoutColorMode] = useState(\"dark\");\r\n  const [staticMenuInactive, setStaticMenuInactive] = useState(false);\r\n  const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n  const [mobileMenuActive, setMobileMenuActive] = useState(false);\r\n  const [costDriverSeriesData, setcostDriverSeriesData] = useState(false);\r\n  const [icisForecastSummaryTable, seticisForecastSummaryTable] =\r\n    useState(false);\r\n  const [costDriver, setcostDriver] = useState(false);\r\n  const [costDriverSeries, setcostDriverSeries] = useState(false);\r\n  const [source, setSource] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [seriesdropdown, setDropdown] = useState([]);\r\n  const [AccuraciesTableData, setAccuraciesTableData] = useState([]);\r\n  const [demandRegressionSummaryTable2, setdemandRegressionSummaryTable2] =\r\n    useState([]);\r\n\r\n  const onCostDriverChange = (event) => {\r\n    //console.log(\"onCostDriverChange event ====>\", event.value);\r\n\r\n    let allseries = icisForecastSummaryTable.Sheet.filter((data) =>\r\n      event.value.some((data) => data.material === event.value.name)\r\n    );\r\n    allseries = allseries.map((data) => data.series);\r\n    //console.log(\"allseries===>\",allseries)\r\n    allseries = [...new Set(allseries)];\r\n    //console.log(\"allseries===>\",allseries)\r\n    let result = seriesName.filter((o) =>\r\n      allseries.some((data) => o.name === data)\r\n    );\r\n    //console.log(\"results====>\",result)\r\n    setDropdown(result);\r\n    setcostDriver(event.value);\r\n  };\r\n\r\n  const sourceOption = [\r\n    {\r\n      name: \"IHS\",\r\n      code: \"IHS\",\r\n    },\r\n    {\r\n      name: \"ICIS\",\r\n      code: \"ICIS\",\r\n    },\r\n  ];\r\n  const seriesName = [\r\n    {\r\n      name: \"LLDPE Bulk Africa E Weekly\",\r\n      code: \"LLDPE Bulk Africa E Weekly\",\r\n    },\r\n    {\r\n      name: \"PE LLDPE Film Butene CFR Peru International 0 - 6 Weeks\",\r\n      code: \"PE LLDPE Film Butene CFR Peru International 0 - 6 Weeks\",\r\n    },\r\n    {\r\n      name: \"Flat Yarn Contract China Weekly\",\r\n      code: \"Flat Yarn Contract China Weekly\",\r\n    },\r\n    {\r\n      name: \"Propylene Bulk NWE Monthly\",\r\n      code: \"Propylene Bulk NWE Monthly\",\r\n    },\r\n    {\r\n      name: \"HDPE Blow Mould Posted EU Weekly\",\r\n      code: \"HDPE Blow Mould Posted EU Weekly\",\r\n    },\r\n    {\r\n      name: \"LDPE High Grade Contract US Monthly\",\r\n      code: \"LDPE High Grade Contract US Monthly\",\r\n    },\r\n    {\r\n      name: \"Copolymer Film Contract US Monthly\",\r\n      code: \"Copolymer Film Contract US Monthly\",\r\n    },\r\n    {\r\n      name: \"LDPE Contract CFR Egypt Weekly\",\r\n      code: \"LDPE Contract CFR Egypt Weekly\",\r\n    },\r\n    {\r\n      name: \"Film Posted Bulk China Weekly\",\r\n      code: \"Film Posted Bulk China Weekly\",\r\n    },\r\n    {\r\n      name: \"HDPE Film Contract EU Weekly\",\r\n      code: \"HDPE Film Contract EU Weekly\",\r\n    },\r\n    {\r\n      name: \"LDPE High Grade Peru International Weekly\",\r\n      code: \"LDPE High Grade Peru International Weekly\",\r\n    },\r\n    {\r\n      name: \"HDPE Bulk Contract DEL US Monthly\",\r\n      code: \"HDPE Bulk Contract DEL US Monthly\",\r\n    },\r\n    {\r\n      name: \"Copolymer Domestic UK Weekly\",\r\n      code: \"Copolymer Domestic UK Weekly\",\r\n    },\r\n  ];\r\n\r\n  const costDrivers = [\r\n    {\r\n      name: \"Polyethylene (Africa)\",\r\n      code: \"Polyethylene (Africa)\",\r\n    },\r\n    {\r\n      name: \"Polypropylene (Middle East)\",\r\n      code: \"Polypropylene (Middle East)\",\r\n    },\r\n    {\r\n      name: \"Polyethylene (Latin America)\",\r\n      code: \"Polyethylene (Latin America)\",\r\n    },\r\n    {\r\n      name: \"Polypropylene (Europe)\",\r\n      code: \"Polypropylene (Europe)\",\r\n    },\r\n    { name: \"Polyethylene (Europe)\", code: \"Polyethylene (Europe)\" },\r\n    { name: \"Polypropylene (US)\", code: \"Polypropylene (US)\" },\r\n    { name: \"Polyethylene (US)\", code: \"Polyethylene (US)\" },\r\n  ];\r\n\r\n  let menuClick = false;\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    productService\r\n      .getIcisForecastSummaryTable2()\r\n      .then((data) => seticisForecastSummaryTable(data));\r\n\r\n    productService.getIcisForecastSummaryTable2().then((data) => {\r\n      // console.log(\"data.Sheet===>\", data.Sheet);\r\n      let modifieData = data.Sheet.map((ele) => {\r\n        return {\r\n          key: ele.key,\r\n          best_model: ele.best_model,\r\n          top_influencers: ele.top_influencers\r\n            .replaceAll(\"[\", \"\")\r\n            .replaceAll(\"]\", \"\")\r\n            .split(\",\"),\r\n          fifth_month_accuracy: (ele.fifth_month_accuracy * 1).toFixed(2),\r\n          first_month_accuracy: (ele.first_month_accuracy * 1).toFixed(2),\r\n          fourth_month_accuracy: (ele.fourth_month_accuracy * 1).toFixed(2),\r\n          second_month_accuracy: (ele.second_month_accuracy * 1).toFixed(2),\r\n          sixth_month_accuracy: (ele.sixth_month_accuracy * 1).toFixed(2),\r\n          test_month_accuracy: (ele.test_month_accuracy * 1).toFixed(2),\r\n          third_month_accuracy: (ele.third_month_accuracy * 1).toFixed(2),\r\n          serial_name: ele.serial_name,\r\n          material: ele.material,\r\n          date: ele.date,\r\n        };\r\n      });\r\n      setProducts(modifieData);\r\n    });\r\n\r\n    productService\r\n      .getdemandRegressionSummaryTable2()\r\n      .then((data) => setdemandRegressionSummaryTable2(data));\r\n  }, []);\r\n\r\n  let plotBandsStart = new Date(\"2021-10-01 03:00:00\").getTime();\r\n  let plotBandsEnd = new Date(\"2023-05-01 03:00:00\").getTime();\r\n  // plotBandsStart = Math.min(...filteredData.map((item) => item.x));\r\n  // plotBandsEnd = Math.max(...filteredData.map((item) => item.x));\r\n\r\n  const costDriverAnalysisChart = {\r\n    chart: {\r\n      zoomType: \"x\",\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n\r\n    yAxis: {\r\n      title: {\r\n        text: \"Unit Price (USD)\",\r\n      },\r\n    },\r\n\r\n    xAxis: {\r\n      title: {\r\n        text: \"Day of Date\",\r\n      },\r\n      //categories: data2,\r\n      plotBands: [\r\n        {\r\n          color: \"#C8FDFB\",\r\n          from: plotBandsStart,\r\n          to: plotBandsEnd,\r\n        },\r\n      ],\r\n\r\n      type: \"datetime\",\r\n    },\r\n\r\n    // legend: {\r\n    //   layout: \"horizontal\",\r\n    //   align: \"center\",\r\n    //   verticalAlign: \"bottom\",\r\n    // },\r\n\r\n    tooltip: {\r\n      // layout: \"horizontal\",\r\n      // align: \"center\",\r\n      // verticalAlign: \"bottom\",\r\n      valueDecimals: 2,\r\n      formatter: function () {\r\n        return (\r\n          \"Series name :  <b>\" +\r\n          this.series.name +\r\n          \"</b> </br> Avg Price :  <b>\" +\r\n          this.y +\r\n          \"</b> </br> Day of Date : <b>\" +\r\n          new Date(this.x).toUTCString() +\r\n          \"</b>\"\r\n        );\r\n      },\r\n    },\r\n\r\n    series: costDriverSeriesData,\r\n\r\n    responsive: {\r\n      rules: [\r\n        {\r\n          condition: {\r\n            maxWidth: 600,\r\n          },\r\n          chartOptions: {\r\n            // legend: {\r\n            //   layout: \"horizontal\",\r\n            //   align: \"center\",\r\n            //   verticalAlign: \"bottom\",\r\n            // },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const onSourcechange = (e) => {\r\n    setSource(e.value);\r\n  };\r\n\r\n  const oncostDriverSeriesChange = (e) => {\r\n    //console.log(\"on oncostDriverSeriesChange event  ==>\", e);\r\n    const icisForecastSummaryTabledata = icisForecastSummaryTable;\r\n    let allmaterial = icisForecastSummaryTable.Sheet.map((data) => {\r\n      return data.serial_name;\r\n    });\r\n    allmaterial = [...new Set(allmaterial)];\r\n    // console.log(\"allmaterial====>\", allmaterial);\r\n    let exampleData = e.value.map((sr) =>\r\n      icisForecastSummaryTabledata.Sheet.filter(\r\n        (el) => el.serial_name === sr.name\r\n      ).map((d) => {\r\n        // console.log(\"data in map ===>\", d);\r\n        let date = d.date\r\n          .split(\"/\") // 3/23/04  ===>\r\n          .map((d, i) => (i === 2 ? 20 + d : d)) //  20 +\"04\" == 2004\r\n          .join(\"/\"); //  [3, 23, 04] ==> 3/23/2004\r\n        date = new Date(date);\r\n        let milliseconds = date.getTime();\r\n\r\n        var dataObj = [milliseconds, Number(d.price)];\r\n        return dataObj;\r\n      })\r\n    );\r\n\r\n    const chartData1 = e.value.map((sr, i) => {\r\n      return {\r\n        name: sr.name,\r\n        data: exampleData[i].splice(-150),\r\n      };\r\n    });\r\n\r\n    let filterAccuraciesTableData = costDriver.map((sr) =>\r\n      products.filter((el) => el.material === sr.name)\r\n    );\r\n\r\n    filterAccuraciesTableData = [].concat(...filterAccuraciesTableData);\r\n\r\n    filterAccuraciesTableData = e.value.map((sr) =>\r\n      filterAccuraciesTableData.filter((el) => el.serial_name === sr.name)\r\n    );\r\n\r\n    filterAccuraciesTableData = [].concat(...filterAccuraciesTableData);\r\n\r\n    setAccuraciesTableData(filterAccuraciesTableData);\r\n    setcostDriverSeries(e.value);\r\n    setcostDriverSeriesData(chartData1);\r\n  };\r\n\r\n  const isDesktop = () => {\r\n    return window.innerWidth > 1024;\r\n  };\r\n\r\n  const onToggleMenu = (event) => {\r\n    menuClick = true;\r\n\r\n    if (isDesktop()) {\r\n      if (layoutMode === \"overlay\") {\r\n        setOverlayMenuActive((prevState) => !prevState);\r\n      } else if (layoutMode === \"static\") {\r\n        setStaticMenuInactive((prevState) => !prevState);\r\n      }\r\n    } else {\r\n      setMobileMenuActive((prevState) => !prevState);\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const header = (\r\n    <div className=\"table-header-container\">\r\n      <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>\r\n        Accuracies\r\n      </h5>\r\n    </div>\r\n  );\r\n\r\n  const topInfluencersTemplate = (rowData) => {\r\n    console.log(\"rowData==>\", rowData);\r\n    if (!rowData.top_influencers) {\r\n      return \"\";\r\n    } else {\r\n      return (\r\n        <div>\r\n          {rowData.top_influencers[0] && (\r\n            <span>1. {rowData.top_influencers[0]}</span>\r\n          )}\r\n          <br />\r\n          {rowData.top_influencers[1] && (\r\n            <span>2. {rowData.top_influencers[1]}</span>\r\n          )}\r\n          <br />\r\n          {rowData.top_influencers[2] && (\r\n            <span>3. {rowData.top_influencers[2]}</span>\r\n          )}\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppTopbar onToggleMenu={onToggleMenu} />\r\n      {/* <Toast ref={toast} /> */}\r\n      <div className=\"layout-main\">\r\n        <div className=\"card\">\r\n          <h5 style={{ fontWeight: \"bolder\", fontFamily: \"poppins\" }}>\r\n            Cost Drivers Analysis\r\n          </h5>\r\n          {/* <strong>Source</strong> */}\r\n          <div style={{ display: \"flex\", margin: \"5px 10px\" }}>\r\n            <MultiSelect\r\n              style={{ width: \"30%\", margin: \"5px 10px\" }}\r\n              value={source}\r\n              options={sourceOption}\r\n              onChange={onSourcechange}\r\n              optionLabel=\"name\"\r\n              placeholder=\"Select a source\"\r\n              display=\"chip\"\r\n            />\r\n            <MultiSelect\r\n              style={{ width: \"49%\", margin: \"5px 10px\" }}\r\n              value={costDriver}\r\n              options={costDrivers}\r\n              onChange={onCostDriverChange}\r\n              optionLabel=\"name\"\r\n              placeholder=\"Select a Cost Driver\"\r\n              display=\"chip\"\r\n            />\r\n\r\n            <MultiSelect\r\n              style={{ width: \"49%\", margin: \"5px 10px\" }}\r\n              value={costDriverSeries}\r\n              options={seriesdropdown}\r\n              onChange={oncostDriverSeriesChange}\r\n              optionLabel=\"name\"\r\n              placeholder=\"Select a Series\"\r\n              display=\"chip\"\r\n            />\r\n          </div>\r\n\r\n          <div style={{ width: \"99%\" }}>\r\n            <HighchartsReact\r\n              highcharts={Highcharts}\r\n              options={costDriverAnalysisChart}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <DataTable\r\n            value={AccuraciesTableData}\r\n            //paginator\r\n            header={header}\r\n            rows={2}\r\n            // // rowsPerPageOptions={[5, 10, 20]}\r\n            // paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n          >\r\n            <Column field=\"key\" header=\"Index\" />\r\n            <Column field=\"best_model\" header=\"Model\" />\r\n            <Column\r\n              field=\"top_influencers\"\r\n              header=\"top 3 influsencial indices\"\r\n              body={topInfluencersTemplate}\r\n              style={{ width: \"20em\" }}\r\n            />\r\n            <Column field=\"test_month_accuracy\" header=\"test\" />\r\n            <Column field=\"first_month_accuracy\" header=\"Jan21\"></Column>\r\n            <Column field=\"second_month_accuracy\" header=\"Feb21\"></Column>\r\n            <Column field=\"third_month_accuracy\" header=\"Mar21\" />\r\n            <Column field=\"fourth_month_accuracy\" header=\"Apr21\" />\r\n            <Column field=\"fifth_month_accuracy\" header=\"May21\" />\r\n            <Column field=\"sixth_month_accuracy\" header=\"Jun21\" />\r\n          </DataTable>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <a href=\"Materialdatachart\">\r\n            <Button\r\n              className=\"previousbutton\"\r\n              label=\"Previous \"\r\n              style={{ marginRight: \" 15px\" }}\r\n            />\r\n          </a>\r\n          <a href=\"SupplierAnalysis\">\r\n            <Button\r\n              className=\"nextbutton\"\r\n              label=\"Next\"\r\n              style={{ marginLeft: \" 15px\" }}\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import react from 'react'\r\nimport './App.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n  export const LoginPage=()=>{\r\n\r\n  \r\n  return (\r\n    <div className=\"limiter\">\r\n\t\t<div className=\"container-login100\">\r\n      {/* <div>\r\n        <img alt=\"Logo\" src=\"images/logo-white.png\" style={{width: '200px', margin: '0px 0px 15px'}}/>\r\n       \r\n      </div> */}\r\n\t\t\t<div className=\"wrap-login100\">\r\n\t\t\t\t<form className=\"login100-form validate-form\">\r\n\t\t\t\t\t<span className=\"login100-form-title p-b-43\">\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"Valid  is required: ex@abc.xyz\" >\r\n\t\t\t\t\t\t<input className=\"input100\" type=\"text\" placeholder=\"Purchase Group\" />\r\n\t\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\r\n\t\t\t\t\t\t<input className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\r\n\t\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"flex-sb-m w-full p-t-3 p-b-32\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"txt1\">\r\n\t\t\t\t\t\t\t\tForgot Password?\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t\r\n\t\t\t\t\t<a href='MaterialOverview'>\r\n\t\t\t\t\t<div className=\"container-login100-form-btn\">\r\n\t\t\t\t\t\t<button className=\"login100-form-btn\">\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n            </a>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* <div className=\"text-center p-t-46 p-b-20\">\r\n\t\t\t\t\t\t<span className=\"txt2\">\r\n\t\t\t\t\t\t\tor sign up using\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t<div className=\"login100-form-social flex-c-m\">\r\n\t\t\t\t\t\t{/* <a href=\"#\" className=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-facebook-f\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</a> */}\r\n\r\n\t\t\t\t\t\t{/* <a href=\"#\" className=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</a> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<div className=\"login100-more\">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ProductService } from '../services/ProductService';\r\nimport { Button } from 'primereact/button';\r\nimport './App.css';\r\nimport { AppTopbar } from \"./AppTopbar\";\r\nimport plantJsonData from \"../data/plantData.json\"\r\nimport supplierJsonData from \"../data/supplierData.json\"\r\n\r\n\r\n export const Orderingplant = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [products3, setProducts3] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState(null);\r\n    //const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n\r\n  \r\n  const [layoutMode, setLayoutMode] = useState(\"static\");\r\n  const [layoutColorMode, setLayoutColorMode] = useState(\"dark\");\r\n  const [staticMenuInactive, setStaticMenuInactive] = useState(false);\r\n  const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n  const [mobileMenuActive, setMobileMenuActive] = useState(false);\r\n  const [date1, setDate1] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [supplierData, setsupplierData] = useState(null);\r\n  const [plantData, setplantData] = useState(null);\r\n\r\n console.log(\"plantJsonData===>\",plantJsonData)\r\n console.log(\"supplierJsonData===>\",supplierJsonData)\r\n\r\n    let menuClick = false;\r\n    \r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\r\n            //toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\r\n        }\r\n    }, [expandedRows]);\r\n    useEffect(() => {\r\n      isMounted.current = true;\r\n      productService.getMaterial().then((data) => setProducts3(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getMaterialInfo().then(data => setProducts(data));\r\n        setsupplierData(supplierJsonData.Sheet1)\r\n        setplantData(plantJsonData.data.Sheet1)\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    \r\n\r\n    const expandAll = () => {\r\n        let _expandedRows = {};\r\n        products.forEach(p => _expandedRows[`${p.id}`] = true);\r\n\r\n        setExpandedRows(_expandedRows);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedRows(null);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    \r\n      const isDesktop = () => {\r\n        return window.innerWidth > 1024;\r\n      };\r\n     \r\n    const onToggleMenu = (event) => {\r\n        menuClick = true;\r\n    \r\n        if (isDesktop()) {\r\n          if (layoutMode === \"overlay\") {\r\n            setOverlayMenuActive((prevState) => !prevState);\r\n          } else if (layoutMode === \"static\") {\r\n            setStaticMenuInactive((prevState) => !prevState);\r\n          }\r\n        } else {\r\n          setMobileMenuActive((prevState) => !prevState);\r\n        }\r\n        event.preventDefault();\r\n      };\r\n   \r\n\r\n\r\n    const header = (\r\n        <div className=\"table-header-container\">\r\n           <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Buyer Group - 07J, Material - 949555 information</h5>\r\n        </div>\r\n    );\r\n    const header2 = (\r\n      <div className=\"table-header-container\">\r\n         <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Ordering Schedule Plant(Tons)</h5>\r\n      </div>\r\n  );\r\n\r\n    return ( \r\n        <div >\r\n             <AppTopbar onToggleMenu={onToggleMenu} />\r\n            {/* <Toast ref={toast} /> */}\r\n          <div className='layout-main'>\r\n          <div className=\"card\">\r\n                <DataTable \r\n                value={products3.Sheet3}\r\n                //  expandedRows={expandedRows} \r\n                // onRowToggle={(e) => setExpandedRows(e.data)}\r\n                //     onRowExpand={onRowExpand} \r\n                //     onRowCollapse={onRowCollapse} \r\n                    responsiveLayout=\"scroll\"\r\n                   // rowExpansionTemplate={rowExpansionTemplate}\r\n                     dataKey=\"id\" header={header}   \r\n                        rows={1}>\r\n                   \r\n                   <Column field=\"material\" header=\"ID\" sortable></Column>\r\n                   <Column field=\"material_type (SAP)\" header=\"Type\" sortable  />\r\n                    <Column field=\"material_description_1\" header=\"Discription\" sortable ></Column>\r\n                    <Column field=\"base_unit_of_measure (UOM)\" header=\"UOM\" sortable ></Column>\r\n                    <Column field=\"mdrm_class (class)\" header=\"UNSPSC Discription\" sortable />\r\n                   \r\n                </DataTable>\r\n            </div>\r\n            <div className='card'>\r\n           <DataTable \r\n                   value={supplierData} \r\n                  //  expandedRows={expandedRows}\r\n                    // onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    // onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n                    // rowExpansionTemplate={rowExpansionTemplate} \r\n                    dataKey=\"id\"\r\n                    header={header2}\r\n                    rows={1}\r\n                    >\r\n                    {/* <Column expander style={{ width: '3em' }} /> */}\r\n                   \r\n                    <Column field=\"Plant\" header=\"Plant\"  ></Column>\r\n                    <Column field=\"Supplier\" header=\"Supplier Name\"  ></Column>\r\n                    <Column field=\"June\" header=\"Feb22\"  />\r\n                    <Column field=\"July\" header=\"Mar22\"  />\r\n                    <Column field=\"August\" header=\"Apr22\" />\r\n                    <Column field=\"September\" header=\"May22\"  />\r\n                    <Column field=\"October\" header=\"Jun22\"   />\r\n                    <Column field=\"November\" header=\"July22\"  />\r\n                    <Column field=\"Total Quantity\" header=\"Total Quantities From Supplier\"   />\r\n                   \r\n                </DataTable>\r\n                </div>\r\n                <div className='card'>\r\n               \r\n           <DataTable \r\n                   value={plantData} \r\n                   \r\n                  //  expandedRows={expandedRows}\r\n                  //   onRowToggle={(e) => setExpandedRows(e.data)}\r\n                  //   onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n                  //   rowExpansionTemplate={rowExpansionTemplate} \r\n                    dataKey=\"id\"\r\n                    //header={header3}\r\n                    rows={5}\r\n                    >\r\n                    {/* <Column expander style={{ width: '3em' }} /> */}\r\n                   \r\n                    <Column field=\"Plant\" header=\"Plant\"  ></Column>\r\n                    <Column field=\"undefined\" header=\"Name\"  ></Column>\r\n                    <Column field=\"June\" header=\"Feb22\"  />\r\n                    <Column field=\"July\" header=\"Mar22\"  />\r\n                    <Column field=\"August\" header=\"Apr22\" />\r\n                    <Column field=\"September\" header=\"May22\"  />\r\n                    <Column field=\"October\" header=\"Jun22\"   />\r\n                    <Column field=\"November\" header=\"July22\"  />\r\n                    \r\n                </DataTable>\r\n                </div>\r\n                <div style={{ display:'flex', justifyContent:'center' }}>\r\n           <a href='Inventory'>\r\n            <Button\r\n            className='previousbutton'\r\n              label=\"Previous \"\r\n              style={{ marginRight: \" 15px\"  }}\r\n            />\r\n            </a>\r\n            <a href=' '>\r\n            <Button\r\n              className='nextbutton'\r\n              label=\"Download Ordering schedule \"\r\n              style={{ marginLeft: \" 15px\"  }}\r\n            />\r\n             </a>\r\n            </div>\r\n            </div>\r\n               \r\n         \r\n        </div>\r\n       \r\n       \r\n    );\r\n}\r\n                 ","import React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ProductService } from '../services/ProductService';\r\nimport { Button } from 'primereact/button';\r\nimport './App.css';\r\nimport { AppTopbar } from \"./AppTopbar\";\r\n\r\n export const Inventory = (props) => {\r\n //console.log(\"props===>\",props.location.state.supplierDetails)\r\n    const [products, setProducts] = useState([]);\r\n    const [products2, setProducts2] = useState([]);\r\n    const [products3, setProducts3] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState(null);\r\n    //const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n  const [layoutMode, setLayoutMode] = useState(\"static\");\r\n  const [layoutColorMode, setLayoutColorMode] = useState(\"dark\");\r\n  const [staticMenuInactive, setStaticMenuInactive] = useState(false);\r\n  const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n  const [mobileMenuActive, setMobileMenuActive] = useState(false);\r\n  const [date1, setDate1] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [supplierObject, setsupplierObject] = useState(null);\r\n\r\n    let menuClick = false;\r\n    const options = {\r\n      chart: {\r\n        type: \"spline\"\r\n      },\r\n      title: {\r\n        text: \"My chart\"\r\n      },\r\n      series: [\r\n        {\r\n          data: [1,3,2,7,5,11,9]\r\n        }\r\n      ]\r\n      \r\n    };\r\n \r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\r\n            //toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\r\n        }\r\n        \r\n    }, [expandedRows]);\r\n   \r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getMaterial().then(data => setProducts(data));\r\n        setsupplierObject(props.location.state?.supplierDetails)\r\n    }, []); \r\n    \r\n    useEffect(() => {\r\n      isMounted.current = true;\r\n      productService.getInventoryInfo().then(data => setProducts2(data));\r\n  }, []);\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    productService.getplantdata().then(data => setProducts3(data));\r\n}, []);\r\n  \r\n  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onRowExpand = (event) => {\r\n        //toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const onRowCollapse = (event) => {\r\n       // toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const expandAll = () => {\r\n        let _expandedRows = {};\r\n        products.forEach(p => _expandedRows[`${p.id}`] = true);\r\n\r\n        setExpandedRows(_expandedRows);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedRows(null);\r\n    }\r\n\r\n    // const formatCurrency = (value) => {\r\n    //     return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    // }\r\n\r\n    // const amountBodyTemplate = (rowData) => {\r\n    //     return formatCurrency(rowData.amount);\r\n    // }\r\n\r\n    const statusOrderBodyTemplate = (rowData) => {\r\n        return <span className={`products-badge status-${rowData.plant.toLowerCase()}`}>{rowData.status_level_inventory}</span>;\r\n    }\r\n\r\n   \r\n      const isDesktop = () => {\r\n        return window.innerWidth > 1024;\r\n      };\r\n         const onToggleMenu = (event) => {\r\n        menuClick = true;\r\n    \r\n        if (isDesktop()) {\r\n          if (layoutMode === \"overlay\") {\r\n            setOverlayMenuActive((prevState) => !prevState);\r\n          } else if (layoutMode === \"static\") {\r\n            setStaticMenuInactive((prevState) => !prevState);\r\n          }\r\n        } else {\r\n          setMobileMenuActive((prevState) => !prevState);\r\n        }\r\n        event.preventDefault();\r\n      };\r\n    const header1 = (\r\n        <div className=\"table-header-container\">\r\n           <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Material Overview</h5>\r\n        </div>\r\n    );\r\n    const header2 = (\r\n      <div className=\"table-header-container\">\r\n         <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Inventory</h5>\r\n      </div>\r\n  );\r\n  const header3 = (\r\n    <div className=\"table-header-container\">\r\n       <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Plant2000</h5>\r\n    </div>\r\n);\r\nconst header4 = (\r\n  <div className=\"table-header-container\">\r\n     <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Plant3000</h5>\r\n  </div>\r\n);\r\nconst header5 = (\r\n  <div className=\"table-header-container\">\r\n     <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Supplier</h5>\r\n  </div>\r\n);\r\nconst header6 = (\r\n  <div className=\"table-header-container\">\r\n     <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Supplier02</h5>\r\n  </div>\r\n);\r\n//   const header3 = (\r\n//     <div className=\"table-header-container\">\r\n//        <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Sans-serif\" }}>Plant3000</h5>\r\n//     </div>\r\n// );\r\n    // const rowExpansionTemplate = (data) => {\r\n    //     return (\r\n    //         <div className=\"orders-subtable\">\r\n    //             {/* <h5>Orders for {data.name}</h5> */}\r\n    //             <DataTable value={data.orders} responsiveLayout=\"scroll\"  rows={1} >\r\n    //                 <Column field=\"id\" header=\"Plant Id(Name)\" ></Column>\r\n    //                 <Column field=\"name\" header=\"Safety Stock\"   body={statusOrderBodyTemplate}></Column>\r\n    //                 <Column field=\"inventory\" header=\"Inventory\"   body={statusOrderBodyTemplate}></Column>\r\n    //                 <Column field=\"status\" header=\"WareHouse Capacity\" body={statusOrderBodyTemplate} ></Column>\r\n    //                 <Column field=\"status\" header=\"Status\"  body={ratingBodyTemplate} ></Column>\r\n    //                 {/* <Column field=\"\" header=\"\" body={statusOrderBodyTemplate} ></Column> */}\r\n                    \r\n    //             </DataTable>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n    \r\n\r\n    return ( \r\n        <div >\r\n             <AppTopbar onToggleMenu={onToggleMenu} />\r\n            {/* <Toast ref={toast} /> */}\r\n          <div className='layout-main'>\r\n             <div className=\"card\">\r\n                <DataTable \r\n                value={products.Sheet3}\r\n               \r\n                    responsiveLayout=\"scroll\"\r\n                   // rowExpansionTemplate={rowExpansionTemplate}\r\n                     dataKey=\"id\" header={header1}   \r\n                        rows={1}>\r\n                   \r\n                   <Column field=\"material\" header=\"ID\" sortable></Column>\r\n                    {/* <Column field=\"Discription\" header=\"Discription\" sortable ></Column> */}\r\n                    <Column field=\"base_unit_of_measure (UOM)\" header=\"UOM\" sortable ></Column>\r\n                    <Column field=\"aliases\" header=\"Aliases\" sortable/>\r\n                    {/* <Column field=\"Criticality\" header=\"Criticality\" sortable  /> */}\r\n                    <Column field=\"material_type (SAP)\" header=\"SAP\" sortable  />\r\n                    <Column field=\"material_group (organisation)\" header=\"Organisation\" sortable />\r\n                    <Column field=\"mdrm_class (class)\" header=\"Class\"  />\r\n                </DataTable>\r\n            </div>\r\n            <div className='card'>\r\n           <DataTable \r\n                   value={products2.Sheet3} \r\n                  //  expandedRows={expandedRows}\r\n                    // onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    // onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n                    // rowExpansionTemplate={rowExpansionTemplate} \r\n                    dataKey=\"id\"\r\n                    header={header2}\r\n                    rows={4}\r\n                    >\r\n                    {/* <Column expander style={{ width: '3em' }} /> */}\r\n                   \r\n                    <Column field=\"plant\" header=\"PlantID(Name)\" ></Column>\r\n                    <Column field=\"safety_stock\" header=\"Safety Stock\" ></Column>\r\n                    <Column field=\"opening_stock\" header=\"Inventory\"  />\r\n                    <Column field=\"warehouse_capacity\" header=\"Warehouse capacity\"  />\r\n                    <Column field=\"status_level_inventory\" header=\"Status\" body={statusOrderBodyTemplate} />\r\n                    \r\n                   \r\n                </DataTable>\r\n                </div>\r\n                <div className='card'>\r\n               \r\n           <DataTable \r\n                   value={products3.Sheet1} \r\n                  //  expandedRows={expandedRows}\r\n                  //   onRowToggle={(e) => setExpandedRows(e.data)}\r\n                  //   onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n                  //   rowExpansionTemplate={rowExpansionTemplate} \r\n                    dataKey=\"key\"\r\n                    header={header3}\r\n                    rows={2}\r\n                    >\r\n                    {/* <Column expander style={{ width: '3em' }} /> */}\r\n                   \r\n                    <Column field=\"undefined\" header=\"\" ></Column>\r\n                    <Column field=\"June\" header=\"Jan21\" ></Column>\r\n                    <Column field=\"July\" header=\"Feb21\"  />\r\n                    <Column field=\"August\" header=\"Mar21\"   />\r\n                    <Column field=\"September\" header=\"Apr21\"  />\r\n                    <Column field=\"October\" header=\"May21\" />\r\n                    <Column field=\"November\" header=\"Jun21\"  />\r\n                   \r\n                    \r\n                </DataTable>\r\n                </div>\r\n                <div className='card'>\r\n               \r\n               \r\n           <DataTable \r\n                   value={supplierObject} \r\n                  //  expandedRows={expandedRows}\r\n                  //   onRowToggle={(e) => setExpandedRows(e.data)}\r\n                  //   onRowExpand={onRowExpand} onRowCollapse={onRowCollapse} responsiveLayout=\"scroll\"\r\n                  //   rowExpansionTemplate={rowExpansionTemplate} \r\n                    dataKey=\"id\"\r\n                    header={header5}\r\n                    rows={3}\r\n                    >\r\n                    {/* <Column expander style={{ width: '3em' }} /> */}\r\n                   \r\n                    <Column field=\"name\" header=\"Supplier\" ></Column>\r\n                    <Column field=\"month1\" header=\"Jan21\" ></Column>\r\n                    <Column field=\"month2\" header=\"Feb21\"   />\r\n                    <Column field=\"month3\" header=\"Mar21\"   />\r\n                    <Column field=\"month4\" header=\"Apr21\"   />\r\n                    <Column field=\"month5\" header=\"May21\"  />\r\n                    <Column field=\"month6\" header=\"Jun21\"  />\r\n                    \r\n                </DataTable>\r\n                </div>\r\n                \r\n                <div style={{ display:'flex',justifyContent:'center' }}>\r\n                <a href='SupplierAnalysis'>\r\n            <Button\r\n              className='previousbutton'\r\n              label=\"Previous\"\r\n              style={{ marginRight: '15px'  }}\r\n            />\r\n            </a>\r\n                <a href='Orderingplant'>\r\n            <Button\r\n            className='nextbutton'\r\n              label=\"Generate ordering schedule\"\r\n              style={{ marginLeft: \" 15px\"  }}\r\n            />\r\n            </a>\r\n            </div>\r\n            </div>\r\n            \r\n              \r\n        </div>\r\n       \r\n       \r\n    );\r\n}\r\n                 ","import React, { useState, useRef } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Route, Router, useHistory } from \"react-router-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { AppTopbar } from \"./components/AppTopbar\";\r\nimport { AppMenu } from \"./components/AppMenu\";\r\nimport \"primereact/resources/themes/saga-blue/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"prismjs/themes/prism-coy.css\";\r\n// import \"@fullcalendar/core/main.css\";\r\n// import \"@fullcalendar/daygrid/main.css\";\r\n// import \"@fullcalendar/timegrid/main.css\";\r\nimport \"./layout/flags/flags.css\";\r\nimport \"./layout/layout.scss\";\r\nimport \"./App.scss\";\r\n\r\nimport {MaterialOverview} from \"./components/MaterialOverview\";\r\nimport {Materialdatachart} from \"./components/Materialdatachart\";\r\nimport {CostDriversAnalysis} from \"./components/CostDriversAnalysis\";\r\nimport { LoginPage } from \"./components/LoginPage\";\r\nimport { Orderingplant } from \"./components/Orderingplant\";\r\nimport { Inventory } from \"./components/Inventory\"\r\nimport { SupplierAnalysis } from \"./components/SupplierAnalysis\";\r\n\r\nconst App = () => {\r\n  const [layoutMode, setLayoutMode] = useState(\"static\");\r\n  const [layoutColorMode, setLayoutColorMode] = useState(\"dark\");\r\n  const [staticMenuInactive, setStaticMenuInactive] = useState(false);\r\n  const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n  const [mobileMenuActive, setMobileMenuActive] = useState(false);\r\n\r\n  // const sidebar = useRef();\r\n  // const history = useHistory();\r\n  // let menuClick = false;\r\n\r\n  // const wrapperClass = classNames(\"layout-wrapper\", {\r\n  //   \"layout-overlay\": layoutMode === \"overlay\",\r\n  //   \"layout-static\": layoutMode === \"static\",\r\n  //   \"layout-static-sidebar-inactive\":\r\n  //     staticMenuInactive && layoutMode === \"static\",\r\n  //   \"layout-overlay-sidebar-active\":\r\n  //     overlayMenuActive && layoutMode === \"overlay\",\r\n  //   \"layout-mobile-sidebar-active\": mobileMenuActive,\r\n  //   // \"p-input-filled\": inputStyle === \"filled\",\r\n  //   // \"p-ripple-disabled\": ripple === false,\r\n  // });\r\n\r\n  // const sidebarClassName = classNames(\"layout-sidebar\", {\r\n  //   \"layout-sidebar-dark\": layoutColorMode === \"dark\",\r\n  //   \"layout-sidebar-light\": layoutColorMode === \"light\",\r\n  // });\r\n\r\n  // const logo =\r\n  //   layoutColorMode === \"dark\"\r\n  //     ? \"assets/layout/images/logo-white.svg\"\r\n  //     : \"assets/layout/images/logo.svg\";\r\n\r\n  // const isDesktop = () => {\r\n  //   return window.innerWidth > 1024;\r\n  // };\r\n\r\n  // const onToggleMenu = (event) => {\r\n  //   menuClick = true;\r\n\r\n  //   if (isDesktop()) {\r\n  //     if (layoutMode === \"overlay\") {\r\n  //       setOverlayMenuActive((prevState) => !prevState);\r\n  //     } else if (layoutMode === \"static\") {\r\n  //       setStaticMenuInactive((prevState) => !prevState);\r\n  //     }\r\n  //   } else {\r\n  //     setMobileMenuActive((prevState) => !prevState);\r\n  //   }\r\n  //   event.preventDefault();\r\n  // };\r\n\r\n  // const onWrapperClick = (event) => {\r\n  //   if (!menuClick) {\r\n  //     setOverlayMenuActive(false);\r\n  //     setMobileMenuActive(false);\r\n  //   }\r\n  //   menuClick = false;\r\n  // };\r\n\r\n  // const onSidebarClick = () => {\r\n  //   menuClick = true;\r\n  // };\r\n\r\n  // const isSidebarVisible = () => {\r\n  //   if (isDesktop()) {\r\n  //     if (layoutMode === \"static\") return !staticMenuInactive;\r\n  //     else if (layoutMode === \"overlay\") return overlayMenuActive;\r\n  //     else return true;\r\n  //   }\r\n\r\n  //   return true;\r\n  // };\r\n\r\n  return (\r\n    <div >\r\n      {/* <AppTopbar onToggleMenu={onToggleMenu} /> */}\r\n\r\n      {/* <CSSTransition\r\n        classNames=\"layout-sidebar\"\r\n        timeout={{ enter: 200, exit: 200 }}\r\n        in={isSidebarVisible()}\r\n        unmountOnExit\r\n      >\r\n        <div\r\n          ref={sidebar}\r\n          className={sidebarClassName}\r\n          onClick={onSidebarClick}\r\n        >\r\n          <div\r\n            className=\"layout-logo\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => history.push(\"/\")}\r\n          >\r\n            <img\r\n              alt=\"Logo\"\r\n              src={logo}\r\n              style={{\r\n                width: \"200px\",\r\n                margin: \"0px 0px 15px 0px\",\r\n              }}\r\n            />\r\n          </div>\r\n          <AppMenu/>\r\n        </div>\r\n      </CSSTransition> */}\r\n\r\n      {/* <AppConfig rippleEffect={ripple} onRippleEffect={onRipple} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\r\n                layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} layoutColorMode={layoutColorMode} onColorModeChange={onColorModeChange} /> */}\r\n\r\n      <div className=\"\">\r\n        {/* <Router > */}\r\n        <Route path=\"/\" exact component={MaterialOverview} />\r\n        <Route path=\"/Materialdatachart\" exact component={Materialdatachart} />\r\n        <Route path=\"/CostDriversAnalysis\" exact component={CostDriversAnalysis} />\r\n        <Route path=\"/LoginPage\" exact component={LoginPage} />\r\n        <Route path=\"/Orderingplant\" exact component={Orderingplant} />\r\n        <Route path=\"/Inventory\" exact component={Inventory} />\r\n        <Route path=\"/SupplierAnalysis\" exact component={SupplierAnalysis} />\r\n        \r\n        \r\n        {/* </Router> */}\r\n\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import \"primereact/resources/themes/saga-blue/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n//import { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n// import store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter >\r\n    {/* <Provider store={store}> */}\r\n    <App />\r\n    {/* </Provider> */}\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","import React from \"react\";\r\nimport { InputText } from \"primereact/inputtext\";\r\n\r\nexport const AppTopbar = (props) => {\r\n  return (\r\n    <div className=\"layout-topbar clearfix\">\r\n      {/* <button\r\n        type=\"button\"\r\n        className=\"p-link layout-menu-button\"\r\n        onClick={props.onToggleMenu}\r\n      >\r\n        <span className=\"pi pi-bars\" />\r\n      </button> */}\r\n      <a className=\"navbar-brand\"\r\n       href=\"#\"\r\n        style={{padding:\"4px;margin:auto\"}}\r\n        >\r\n          <img src=\"assets/layout/images/logo-white.svg\"\r\n          style={{height:\"100%\", width: \"auto\" }}\r\n           title=\"SSA\"/></a>\r\n      <div className=\"layout-topbar-icons\">\r\n        {/* <span className=\"layout-topbar-search\">\r\n          <InputText type=\"text\" placeholder=\"Search\" />\r\n          <span className=\"layout-topbar-search-icon pi pi-search\" />\r\n        </span>\r\n        <button type=\"button\" className=\"p-link\">\r\n          <span className=\"layout-topbar-item-text\">Events</span>\r\n          <span className=\"layout-topbar-icon pi pi-calendar\" />\r\n          <span className=\"layout-topbar-badge\">5</span>\r\n        </button>\r\n        <button type=\"button\" className=\"p-link\">\r\n          <span className=\"layout-topbar-item-text\">Settings</span>\r\n          <span className=\"layout-topbar-icon pi pi-cog\" />\r\n        </button> */}\r\n        <button type=\"button\" className=\"p-link\">\r\n          <span className=\"layout-topbar-item-text\">User</span>\r\n          <span className=\"layout-topbar-icon pi pi-user\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport class ProductService {\r\n  getProductsSmall() {\r\n    return fetch(\"assets/demo/data/products-small.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n\r\n  getProducts() {\r\n    return fetch(\"assets/demo/data/products.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  } // getProductsWithOrdersSmall() { //     return fetch('assets/demo/data/material_info.json').then(res => res.json()).then(d => d.data); // }\r\n\r\n  getProductsWithOrdersSmall() {\r\n    return fetch(\"assets/demo/data/products-orders-small.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n\r\n  getIcisForecastSummaryTable() {\r\n    return fetch(\"/assets/demo/data/icis_forecast_summary_table.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.Sheet1);\r\n  }\r\n\r\n  getsupplierTable() {\r\n    return fetch(\"/assets/demo/data/supplierData.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => console.log(\"d===>\", d));\r\n  }\r\n\r\n  getplantTable() {\r\n    return fetch(\"/assets/demo/data/plantData.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.Sheet1);\r\n  }\r\n\r\n  getMaterialInfo() {\r\n    return fetch(\"/assets/demo/data/overview.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n  getMaterial() {\r\n    return fetch(\"/assets/demo/data/material_info.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n  getInventoryInfo() {\r\n    return fetch(\"/assets/demo/data/inventory_info.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n  getIcisForecastSummaryTable2() {\r\n    return fetch(\"/assets/demo/data/icis_forecast_summary_table_2.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n  getdemandSummaryTable2() {\r\n    return fetch(\"/assets/demo/data/demand_regrwssion_summary_table_2.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n  getplantdata() {\r\n    return fetch(\"/assets/demo/data/plant_data.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n  getdemandRegressionSummaryTable2() {\r\n    return fetch(\"/assets/demo/data/demandRegressionSummaryTableData2.json\")\r\n      .then((res) => res.json())\r\n      .then((d) => d.data);\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default class ProcService {\r\n  getMaterialInfo(params) {\r\n    return axios\r\n      .get(\"/assets/demo/data/material_info.json\", { params: params })\r\n      .then((res) => {\r\n        //console.log(\"getMaterialInfo ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in getMaterialInfo ${e.message}`));\r\n  }\r\n\r\n  getDemandInfoRegression1(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/demand_info_regression1.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getDemandInfoRegression1 ==>\", res);\r\n        return res.data.Sheet3;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getDemandInfoRegression1 ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getIcisForecastSummaryTable2(params) {\r\n    return axios\r\n      .get(\"/assets/demo/data/icis_forecast_summary_table_2.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in icis_forecast_summary_table_2 ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getDemandUITable(params) {\r\n    return axios\r\n      .get(\"/assets/demo/data/demand_ui_table.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getDemandUITable ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in getDemandUITable ${e.message}`));\r\n  }\r\n\r\n  getCategoryTable(params) {\r\n    return axios\r\n      .get(\"/assets/demo/data/inventory_info new.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getDemandUITable ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in getDemandUITable ${e.message}`));\r\n  }\r\n\r\n  getHistoricalUnitPrice(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/historical_unit_price.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getHistoricalUnitPrice ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getHistoricalUnitPrice ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getIcisAlertInfo(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/icis_alert_info.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getIcisAlertInfo ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in getIcisAlertInfo ${e.message}`));\r\n  }\r\n\r\n  getIcisForecastErrorInfoUpdated(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/icis_forecast_error_info_updated.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getIcisForecastErrorInfoUpdated ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getIcisForecastErrorInfoUpdated ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getIcisForecastSid(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/icis_forecast_sid.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getIcisForecastSid ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in getIcisForecastSid ${e.message}`));\r\n  }\r\n\r\n  getInventoryInfo(params) {\r\n    return axios\r\n      .get(\"/assets/demo/data/inventory_info.json\", { params: params })\r\n      .then((res) => {\r\n        //console.log(\"getInventoryInfo  ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in getInventoryInfo ${e.message}`));\r\n  }\r\n\r\n  getMaterialCostDriverOutput(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/material_cost_driver_output.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getMaterialCostDriverOutput ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getMaterialCostDriverOutput ${e.message}`)\r\n      );\r\n  }\r\n\r\n  geTonRouteInfo(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/on_route_info.json\", { params: params })\r\n      .then((res) => {\r\n        //console.log(\"geTonRouteInfo ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in geTonRouteInfo ${e.message}`));\r\n  }\r\n\r\n  getDemandInfoRegression2(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/demand_info_regression1.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getDemandInfoRegression2 ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getDemandInfoRegression1 ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getPlants(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/on_route_info.json\", { params: params })\r\n      .then((res) => {\r\n        const unique = [...new Set(res.data.Sheet2.map((item) => item.plant))];\r\n        //console.log(\"getPlants ==>\", res);\r\n        return unique;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getDemandInfoRegression1 ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getDemandInfoRegressionSummaryTable(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/demand_info_regression_summary_table.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getDemandInfoRegressionSummaryTable ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getDemandInfoRegressionSummaryTable ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getIcisForecastSummaryTable(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/icis_forecast_summary_table.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((e) =>\r\n        console.log(`error in getIcisForecastSummaryTable ${e.message}`)\r\n      );\r\n  }\r\n\r\n  getOrder(params) {\r\n    return axios\r\n      .get(\"assets/demo/data/order.json\", {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        //console.log(\"getOrder ==>\", res);\r\n        return res;\r\n      })\r\n      .catch((e) => console.log(`error in getOrder ${e.message}`));\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { AutoComplete } from \"primereact/autocomplete\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Toolbar } from \"primereact/toolbar\";\r\n//import { InputTextarea } from 'primereact/inputtextarea';\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { InputText } from \"primereact/inputtext\";\r\n// import { classNames } from \"primereact/utils\";\r\nimport classNames from \"classnames\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport dataHistorical from \"../data/historicalunitpric.json\"\r\nimport { AppTopbar } from \"../components/AppTopbar\";\r\n\r\n\r\nimport { MultiSelect } from \"primereact/multiselect\";\r\n// import { Dropdown } from 'primereact/dropdown';\r\n\r\nimport ProcService from \"../services/ProcService\";\r\nimport {ProductService} from \"../services/ProductService\";\r\n\r\nexport class SupplierAnalysis extends Component {\r\n  emptyProduct = {\r\n    id: null,\r\n    name: \"\",\r\n    quality: 0,\r\n    price: 0,\r\n    Material_Number: \"\",\r\n    Composition: 0,\r\n    Percentage: 0,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      materialCostDriverOutput: [],\r\n      materialInfo: [],\r\n      costDriver: this.props.location.state ? this.props.location.state.costDriver : null,\r\n      seriesName: this.props.location.state ? this.props.location.state.seriesName : [],\r\n      plant: this.props.location.state ? this.props.location.state.plant : null,\r\n      products: this.props.location.state ? this.props.location.state.products : [],\r\n      countries: [],\r\n      product: this.emptyProduct,\r\n      productDialog: false,\r\n      deleteProductDialog: false,\r\n      deleteProductsDialog: false,\r\n      selectedProducts: null,\r\n      submitted: false,\r\n      globalFilter: null,\r\n      filteredCountries: null,\r\n      selectedCity1: null,\r\n      selectedCity2: null,\r\n      filteredCities: null,\r\n      HistoricalChartData:[],\r\n      ForecastedData:[],\r\n      supplierDetails:[]\r\n    };\r\n\r\n    this.cities = [\r\n      {\r\n        name: \"Film Posted DEL India 0-7 Days\",\r\n        code: \"Film Posted DEL India 0-7 Days\",\r\n      },\r\n      {\r\n        name: \"HDPE Blow Mould Domestic FD EU no-data\",\r\n        code: \"HDPE Blow Mould Domestic FD EU no-data\",\r\n      },\r\n      {\r\n        name: \"Flat Yarn (Raffia) Spot DEL India W 0-7 Days\",\r\n        code: \"Flat Yarn (Raffia) Spot DEL India W 0-7 Days\",\r\n      },\r\n      {\r\n        name: \"HDPE Film Domestic FD EU no-data\",\r\n        code: \"HDPE Film Domestic FD EU no-data\",\r\n      },\r\n    ];\r\n\r\n    this.plants = [\r\n      { name: \"2000\", code: \"2000\" },\r\n      { name: \"3000\", code: \"3000\" },\r\n    ];\r\n\r\n    this.countries = [\r\n      {\r\n        name: \"Polypropylene (Middle East)\",\r\n        code: \"Polypropylene (Middle East)\",\r\n      },\r\n      { name: \"Polyethylene (Europe)\", code: \"Polyethylene (Europe)\" },\r\n    ];\r\n\r\n    this.supplierFormula = [\r\n      {\r\n       \"name\": \"A\",\r\n       \"code\": \"A\",\r\n      },\r\n      {\r\n        \"name\": \"A\",\r\n       \"code\": \"A\",\r\n      },\r\n      {\r\n        \"name\": \"A\",\r\n       \"code\": \"A\",\r\n      },\r\n      {\r\n        \"name\": \"A\",\r\n       \"code\": \"A\",\r\n      }\r\n     ]\r\n\r\n     this.supplierFormulaData = [\r\n      {\r\n       \"supplier_name\": \"A\",\r\n       \"formulae\": \"1.2 * [Polyethylene (Africa)-LLDPE Bulk Africa E Weekly] + 140\",\r\n       \"capacity\": 1000,\r\n       \"lead_time_months\": 2\r\n      },\r\n      {\r\n       \"supplier_name\": \"B\",\r\n       \"formulae\": \"1.5 * [Polypropylene (US)-Homopolymer Bulk US Monthly] + 150\",\r\n       \"capacity\": 980,\r\n       \"lead_time_months\": 1\r\n      },\r\n      {\r\n       \"supplier_name\": \"C\",\r\n       \"formulae\": \"1.3 * [Polypropylene (Middle East)-Film Posted Bulk China Weekly] + 120\",\r\n       \"capacity\": 1200,\r\n       \"lead_time_months\": 2\r\n      },\r\n      {\r\n       \"supplier_name\": \"D\",\r\n       \"formulae\": \"1.4 * [Polyethylene (US)-HDPE Bulk Contract DEL US Monthly] + 1.2 * [Polypropylene (US)-Copolymer Film Contract US Monthly] + 100\",\r\n       \"capacity\": 1500,\r\n       \"lead_time_months\": 1\r\n      }\r\n     ]\r\n\r\n    this.searchCountry = this.searchCountry.bind(this);\r\n    this.editingCellRows = {};\r\n    this.originalRows = {};\r\n    this.productService = new ProductService();\r\n    this.procService = new ProcService();\r\n    this.saveProduct = this.saveProduct.bind(this);\r\n\r\n    ///////////////////////////////// Aashish\r\n    this.hideDialog = this.hideDialog.bind(this);\r\n    this.openNew = this.openNew.bind(this);\r\n    this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n    this.editProduct = this.editProduct.bind(this);\r\n    this.confirmDeleteProduct = this.confirmDeleteProduct.bind(this);\r\n    this.deleteProduct = this.deleteProduct.bind(this);\r\n   // this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n\r\n    ///////////////////////////////// Aashish\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n    this.onRowEditCancel2 = this.onRowEditCancel2.bind(this);\r\n    this.onRowEditChange = this.onRowEditChange.bind(this);\r\n    // this.onEditorInit = this.onEditorInit.bind(this);\r\n    this.onInputNumberChange = this.onInputNumberChange.bind(this);\r\n    this.hideDeleteProductDialog = this.hideDeleteProductDialog.bind(this);\r\n    this.hideDeleteProductsDialog = this.hideDeleteProductsDialog.bind(this);\r\n    this.onCityChange = this.onCityChange.bind(this);\r\n    this.weeklyValues = {\r\n      'Polyethylene (Africa)-LLDPE Bulk Africa E Weekly':[1365.2203389830509, 1337.8064516129032, 1314.311475409836, 1319.4754098360656, 1313.8387096774193, 1348.5833333333333],\r\n      \r\n      'Polypropylene (US)-Homopolymer Bulk US Monthly':[1365.2203389830509, 1337.8064516129032, 1314.311475409836, 1319.4754098360656, 1313.8387096774193, 1348.5833333333333],\r\n      \r\n      'Polypropylene (Middle East)-Film Posted Bulk China Weekly'\r\n      :[1470.7, 1443.25, 1428.0689655172414, 1450.3548387096773, 1417, 1387.1666666666667],\r\n      \r\n      'Polyethylene (US)-HDPE Bulk Contract DEL US Monthly'\r\n      :[1448.2105263157894, 1436.72131147541, 1440.0166666666667, 1451.3387096774193, 1456.4354838709678, 1457.3]\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.procService.getMaterialCostDriverOutput({ material: 7001733 }).then((data) => this.setState({ materialCostDriverOutput: data.data.Sheet3 }));\r\n    this.procService.getIcisForecastSummaryTable().then((data) => this.setState({ ForecastedData: data.data.Sheet1 }));\r\n\r\n    this.procService.getMaterialInfo({ material: 7001733 }).then((data) => {\r\n      return this.setState({ materialInfo: data });\r\n    });\r\n    \r\n  }\r\n \r\n\r\n  Onsave = () => {\r\n     console.log(\"Onsave\", this.state.data);\r\n\r\n    const { costDriver, seriesName, products, plant } = this.state;\r\n    console.log(\"products==>\",products)\r\n    this.props.history.push(\"/SupplierAnalysis\", {\r\n      costDriver,\r\n      seriesName,\r\n      products,\r\n      plant,\r\n    });\r\n  };\r\n\r\n  SubmitValueselectedCity1 = (e) => {\r\n    //console.log(this.state.selectedCity1);\r\n    this.props.handleData(this.state.selectedCity1);\r\n  };\r\n  onCityChange = (e) => {\r\n    this.setState({ selectedCity1: e.target.value });\r\n  };\r\n\r\n  \r\n  optimize = () => {\r\n   // console.log(\"this.supplierDetails====>\",this.supplierDetails)\r\n    this.props.history.push(\"/Inventory\", \r\n    {supplierDetails:window.supplierObject}\r\n    );\r\n  };\r\n\r\n  \r\n  onPlantChange = (e) => {\r\n    this.setState(\r\n      { plant: e.target.value }\r\n      //console.log(\"e in onPlantChange\", e)\r\n    );\r\n\r\n    this.procService\r\n    .getHistoricalUnitPrice({ material: 7001733 })\r\n    .then((res) => {\r\n      const  plant  = e.target.value;\r\n      let resData = dataHistorical.Sheet2;\r\n      console.log(\"resData====>\",resData)\r\n      console.log(\"plant====>\",plant)\r\n      const filterByPlantData = resData.filter((el) => el.plant === plant.name);\r\n      console.log(\"filterByPlantData===>\",filterByPlantData)\r\n      const unitPriceUSD = filterByPlantData.map((el) => {\r\n        let date = el.posting_date\r\n          .split(\"/\") // 3/23/04  ===>\r\n          .map((d, i) => (i === 2 ? 20 + d : d)) //  20 +\"04\" == 2004\r\n          .join(\"/\"); //  [3, 23, 04] ==> 3/23/2004\r\n\r\n        date = new Date(date);\r\n        let milliseconds = date.getTime();\r\n\r\n        // console.log(\"date ==>\", milliseconds);\r\n\r\n        return [milliseconds, Number(el.unit_price_usd)];\r\n      });\r\n\r\n      const chartData = [\r\n        {\r\n          name: plant.name,\r\n          data: unitPriceUSD.slice(-12),\r\n        },\r\n      ];\r\n\r\n       console.log(\"HistoricalUnitPrice chartData ====> \", chartData);\r\n      return this.setState({ HistoricalChartData: chartData });\r\n    });\r\n  };\r\n  // nextPath(path) {\r\n  //   this.props.history.push(path);\r\n  // }\r\n  \r\n  searchCountry(event) {\r\n    setTimeout(() => {\r\n      let filteredCountries;\r\n      if (!event.query.trim().length) {\r\n        filteredCountries = [...this.state.countries.name];\r\n      } else {\r\n        filteredCountries = this.countries.filter((country) => {\r\n          // console.log('MyCountry' , country);\r\n          // console.log(\"ab\", country.name);\r\n          return country.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n      }\r\n\r\n      this.setState({ filteredCountries });\r\n    }, 250);\r\n  }\r\n\r\n  onEditorValueChange(productKey, props, value) {\r\n    let updatedProducts = [...props.value];\r\n    updatedProducts[props.rowIndex][props.field] = value;\r\n    this.setState({ [`${productKey}`]: updatedProducts });\r\n  }\r\n\r\n  statusEditor(productKey, props) {\r\n    return (\r\n      <Dropdown\r\n        value={props.rowData[\"inventoryStatus\"]}\r\n        options={this.statuses}\r\n        optionLabel=\"label\"\r\n        optionValue=\"value\"\r\n        onChange={(e) => this.onEditorValueChange(productKey, props, e.value)}\r\n        style={{ width: \"100%\" }}\r\n        placeholder=\"Select a Status\"\r\n        itemTemplate={(option) => {\r\n          return <span className={`product-badge status-${option.value.toLowerCase()}`}>{option.label}</span>;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  inputTextEditor(productKey, props, field) {\r\n    return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(productKey, props, e.target.value)} />;\r\n  }\r\n\r\n  nameEditor(productKey, props) {\r\n    return this.inputTextEditor(productKey, props, \"name\");\r\n  }\r\n\r\n  // quatityEditor(productKey, props) {\r\n  //   return this.inputTextEditor(productKey, props, 'quantity');\r\n  // }\r\n\r\n  quatityEditor(productKey, props) {\r\n    return (\r\n      // <InputNumber\r\n      //   value={props.rowData[\"quantity\"]}\r\n      //   onValueChange={(e) =>\r\n      //     this.onEditorValueChange(productKey, props, e.value)\r\n      //   }\r\n      // />\r\n      <InputText type=\"text\" value={props.rowData[\"quantity\"]} onChange={(e) => this.onEditorValueChange(productKey, props, e.target.value)} />\r\n    );\r\n  }\r\n\r\n  priceEditor(productKey, props) {\r\n    return <InputNumber value={props.rowData[\"price\"]} onValueChange={(e) => this.onEditorValueChange(productKey, props, e.value)} />;\r\n  }\r\n  leadTime = (productKey, props) => {\r\n    return <InputNumber value={props.rowData[\"Percentage\"]} onValueChange={(e) => this.onEditorValueChange(productKey, props, e.value)} />;\r\n  };\r\n\r\n  onEditorSubmit(e) {\r\n    const { rowIndex: index, field } = e.columnProps;\r\n    delete this.editingCellRows[index][field];\r\n  }\r\n\r\n  onRowEditInit(event) {\r\n    this.originalRows[event.index] = { ...this.state.products[event.index] };\r\n  }\r\n\r\n  onRowEditCancel(event) {\r\n    let products = [...this.state.products];\r\n    products[event.index] = this.originalRows[event.index];\r\n    delete this.originalRows[event.index];\r\n\r\n    this.setState({ products3: products });\r\n  }\r\n\r\n  onRowEditInit2(event) {\r\n    this.originalRows2[event.index] = { ...this.state.products4[event.index] };\r\n  }\r\n\r\n  onRowEditChange(event) {\r\n    this.setState({ editingRows: event.data });\r\n  }\r\n  onRowEditCancel2(event) {\r\n    let products = [...this.state.products4];\r\n    products[event.index] = this.originalRows2[event.index];\r\n    delete this.originalRows2[event.index];\r\n    this.setState({ products4: products });\r\n  }\r\n\r\n  openNew() {\r\n    this.setState({\r\n      product: this.emptyProduct,\r\n      submitted: false,\r\n      productDialog: true,\r\n    });\r\n  }\r\n  hideDialog() {\r\n    this.setState({\r\n      submitted: false,\r\n      productDialog: false,\r\n    });\r\n  }\r\n  hideDeleteProductDialog() {\r\n    this.setState({ deleteProductDialog: false });\r\n  }\r\n\r\n  hideDeleteProductsDialog() {\r\n    this.setState({ deleteProductsDialog: false });\r\n  }\r\n\r\n\r\n  saveProduct() {\r\n    let state = { submitted: true };\r\n    if (this.state.product.name.trim()) {\r\n      let products = [...this.state.products];\r\n      let product = { ...this.state.product };\r\n      if (this.state.product.id) {\r\n        const index = this.findIndexById(this.state.product.id);\r\n\r\n        products[index] = product;\r\n        this.toast.show({\r\n          severity: \"success\",\r\n          summary: \"Successful\",\r\n          detail: \"Product Updated\",\r\n          life: 3000,\r\n        });\r\n      } else {\r\n        console.log(\"inside else\")\r\n        product.id = this.createId();\r\n        product.image = \"product-placeholder.svg\";\r\n        products.push(product);\r\n        console.log(\"this.state.products===>\",products)\r\n        this.convertData(products)\r\n        this.toast.show({\r\n          severity: \"success\",\r\n          summary: \"Successful\",\r\n          detail: \"Product Created\",\r\n          life: 3000,\r\n        });\r\n      }\r\n\r\n\r\n\r\n      state = {\r\n        ...state,\r\n        products,\r\n        productDialog: false,\r\n        product: this.emptyProduct,\r\n      };\r\n    }\r\n    this.setState(state);\r\n  }\r\n  createId() {\r\n    let id = \"\";\r\n    let chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (let i = 0; i < 5; i++) {\r\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return id;\r\n  }\r\n  editProduct(product) {\r\n    this.setState({\r\n      product: { ...product },\r\n      productDialog: true,\r\n    });\r\n  }\r\n  ///////////////////////////////\r\n\r\n  ///////////////// Aashish\r\n\r\n  confirmDeleteProduct(product) {\r\n    this.setState({\r\n      product,\r\n      deleteProductDialog: true,\r\n    });\r\n  }\r\n\r\n  deleteProduct() {\r\n    let products = this.state.products.filter((val) => val.id !== this.state.product.id);\r\n    this.setState({\r\n      products,\r\n      deleteProductDialog: false,\r\n      product: this.emptyProduct,\r\n    });\r\n    this.toast.show({\r\n      severity: \"success\",\r\n      summary: \"Successful\",\r\n      detail: \"Product Deleted\",\r\n      life: 3000,\r\n    });\r\n  }\r\n\r\n  onInputChange(e, name) {\r\n    const val = (e.target && e.target.value) || \"\";\r\n    let product = { ...this.state.product };\r\n    const data  = this.supplierFormulaData.filter((data)=>\r\n         data.supplier_name === e.value\r\n    )\r\n    product['name'] = data[0].supplier_name;\r\n    product['price'] = data[0].capacity;\r\n    product['quantity'] = data[0].formulae;\r\n    product['Percentage'] = data[0].lead_time_months;\r\n\r\n\r\n    this.setState({ product });\r\n  }\r\n\r\n  onInputNumberChange(e, name) {\r\n    // const val = e.value || 0;\r\n    // let product = { ...this.state.product };\r\n    // product[`${name}`] = val;\r\n    // //console.log(\"{product in onInputNumberChange : ====>\", product);\r\n    // this.setState({ product });\r\n  }\r\n\r\n  convertData = (products) => {\r\n    //const { data } = this.state;\r\n    let data = dataHistorical.Sheet2;\r\n    if (data) {\r\n      let suppliers = products;\r\n      let forecastedObj = {};\r\n      let leadTimeObj = {};\r\n      let supplierMaxCapacity = {};\r\n      //console.log(\"suppliers  =====>\", suppliers);\r\n      let convertedData = suppliers.map((el) => {\r\n        if (Number(el.quantity)) {\r\n          forecastedObj = {\r\n            name: el.name,\r\n\r\n            field: \"Forecasted Price\",\r\n\r\n            month1: Number(el.quantity),\r\n\r\n            month2: Number(el.quantity),\r\n\r\n            month3: Number(el.quantity),\r\n\r\n            month4: Number(el.quantity),\r\n\r\n            month5: Number(el.quantity),\r\n\r\n            month6: Number(el.quantity),\r\n          };\r\n          leadTimeObj = {\r\n            name: el.name,\r\n\r\n            field: \"Lead Time\",\r\n\r\n            month1: el.Percentage,\r\n\r\n            month2: el.Percentage,\r\n\r\n            month3: el.Percentage,\r\n\r\n            month4: el.Percentage,\r\n\r\n            month5: el.Percentage,\r\n\r\n            month6: el.Percentage,\r\n          };\r\n          supplierMaxCapacity = {\r\n            name: el.name,\r\n\r\n            field: \"Supplier Max. Capacity\",\r\n\r\n            //OptimizeName : \"Capacity\",\r\n\r\n            month1: el.price,\r\n\r\n            month2: el.price,\r\n\r\n            month3: el.price,\r\n\r\n            month4: el.price,\r\n\r\n            month5: el.price,\r\n\r\n            month6: el.price,\r\n          };\r\n        } else {\r\n          let data = this.state.ForecastedData;\r\n\r\n          var regex = /\\[/gi,\r\n          result,\r\n          indices = [];\r\n          \r\n          let allseries = suppliers.map((p)=>{\r\n            console.log(\"inside data===>\",p.quantity)\r\n           let startIndex = p.quantity.indexOf('[')\r\n           let lastIndex = p.quantity.indexOf(']') \r\n\r\n           let seriesname =  p.quantity.substring(startIndex+1,lastIndex)\r\n           return seriesname;\r\n          })\r\n\r\n\r\n         // let seriesArr = data.seriesName.map((sr) => sr.name);\r\n          let str = el.quantity;\r\n         \r\n          while ((result = regex.exec(str))) {\r\n            indices.push(result.index);\r\n          }\r\n          console.log(\"indices===>\",indices)\r\n          let res = [];\r\n          for (let i = 0; i < 6; i++) {\r\n            let startIndex = el.quantity.indexOf('[')\r\n            let lastIndex = el.quantity.indexOf(']') \r\n            \r\n            let seriesname =  el.quantity.substring(startIndex+1,lastIndex)\r\n            let duplicate = el.quantity;\r\n            let duplicateSeriesArr = [...allseries];\r\n            let strArr = duplicate.split(\"\");\r\n            while (strArr.indexOf(\"[\") !== -1) {\r\n\r\n              let avgMonthData = this.weeklyValues[seriesname][i];\r\n              let index = strArr.indexOf(\"[\");\r\n              let startIndex = strArr.indexOf('[')\r\n              let lastIndex = strArr.indexOf(']') \r\n              //let seriesname =  p.quantity.substring(startIndex+1,lastIndex)\r\n              \r\n              strArr.splice(startIndex, lastIndex+1, avgMonthData);\r\n              duplicateSeriesArr.shift();\r\n            }\r\n            res.push(Number(eval(strArr.join(\"\")).toFixed(2)));\r\n          }\r\n          forecastedObj = {\r\n            name: el.name,\r\n\r\n            field: \"Forecasted Price\",\r\n\r\n            month1: res[0],\r\n\r\n            month2: res[1],\r\n\r\n            month3: res[2],\r\n\r\n            month4: res[3],\r\n\r\n            month5: res[4],\r\n\r\n            month6: res[5],\r\n          };\r\n\r\n          leadTimeObj = {\r\n            name: el.name,\r\n\r\n            field: \"Lead Time\",\r\n\r\n            month1: el.Percentage,\r\n\r\n            month2: el.Percentage,\r\n\r\n            month3: el.Percentage,\r\n\r\n            month4: el.Percentage,\r\n\r\n            month5: el.Percentage,\r\n\r\n            month6: el.Percentage,\r\n          };\r\n\r\n          supplierMaxCapacity = {\r\n            name: el.name,\r\n\r\n            field: \"Supplier Max. Capacity\",\r\n\r\n            //OptimizeName : \"Capacity\",\r\n\r\n            month1: el.price,\r\n\r\n            month2: el.price,\r\n\r\n            month3: el.price,\r\n\r\n            month4: el.price,\r\n\r\n            month5: el.price,\r\n\r\n            month6: el.price,\r\n          };\r\n        }\r\n        return { forecastedObj, supplierMaxCapacity, leadTimeObj };\r\n      });\r\n\r\n      window.supplierObject = convertedData.map((data)=>data.forecastedObj)\r\n      console.log(\"convertedData =====>\", window.supplierObject);\r\n    \r\n      return this.setState({\r\n        supplierDetails: convertedData,\r\n        count: this.state.count + 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  actionBodyTemplate(rowData) {\r\n    return (\r\n      <React.Fragment>\r\n        <Button icon=\"pi pi-trash\" className=\"p-button-text p-button-secondary\" onClick={() => this.confirmDeleteProduct(rowData)} style={{ width: \"30px\" }} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  /////////\r\n\r\n  render() {\r\n    //console.log(\"state in Demo\", this.state);\r\n    \r\n    let seriesData = [];\r\n    let months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"month2\",\r\n    ];\r\n\r\n    let date = new Date();\r\n    let month = date.getMonth();\r\n    let year = date.getFullYear();\r\n    let month1 =\r\n      month > 11\r\n        ? months[month % 11] + \"-\" + year + 1\r\n        : months[month] + \"-\" + year;\r\n    let month2 =\r\n      month + 1 > 11\r\n        ? months[(month + 1) % 11] + \"-\" + year + 1\r\n        : months[month + 1] + \"-\" + year;\r\n    let month3 =\r\n      month + 2 > 11\r\n        ? months[(month + 2) % 11] + \"-\" + year + 1\r\n        : months[month + 2] + \"-\" + year;\r\n    let month4 =\r\n      month + 3 > 11\r\n        ? months[(month + 3) % 11] + \"-\" + year + 1\r\n        : months[month + 3] + \"-\" + year;\r\n    let month5 =\r\n      month + 4 > 11\r\n        ? months[(month + 4) % 11] + \"-\" + year + 1\r\n        : months[month + 4] + \"-\" + year;\r\n    let month6 =\r\n      month + 5 > 11\r\n        ? months[(month + 5) % 11] + \"-\" + year + 1\r\n        : months[month + 5] + \"-\" + year;\r\n\r\n    const {\r\n      data,\r\n      InventoryInfo,\r\n      icisForecastErrorInfoUpdated,\r\n      supplierDetails,\r\n      count,\r\n    } = this.state;\r\n\r\n    if (count < 2 && data) this.convertData();\r\n\r\n    const forcastedValues =\r\n      supplierDetails.length > 0\r\n        ? supplierDetails.map((supplier) => supplier.forecastedObj)\r\n        : [];\r\n\r\n    const forcastSeriesData =\r\n      supplierDetails.length > 0\r\n        ? supplierDetails.map((supplier) => {\r\n            let objData = {\r\n              name: supplier.forecastedObj.name,\r\n              data: [\r\n                [month1, supplier.forecastedObj.month1],\r\n                [month2, supplier.forecastedObj.month2],\r\n                [month3, supplier.forecastedObj.month3],\r\n                [month4, supplier.forecastedObj.month4],\r\n                [month5, supplier.forecastedObj.month5],\r\n                [month6, supplier.forecastedObj.month6],\r\n              ],\r\n            };\r\n            //console.log(\"forcastSeriesData ====>\", objData);\r\n            return objData;\r\n          }\r\n          )\r\n        : [];\r\n\r\n    \r\n        const forecastedSupplierPriceOpthin = {\r\n          chart: {\r\n            zoomType: \"x\",\r\n          },\r\n          title: {\r\n            // text: \"Sabic Historical Prices\",\r\n            text: \"\",\r\n            align: \"center\",\r\n          },\r\n          yAxis: {\r\n            // type: \"datetime\",\r\n            title: {\r\n              text: \"USD/Ton\",\r\n            },\r\n          },\r\n          xAxis: {\r\n            categories: [month1, month2, month3, month4, month5, month6],\r\n            title: {\r\n              text: \"Dates\",\r\n            },\r\n          },\r\n          legend: {\r\n            layout: \"horizontal\",\r\n            align: \"center\",\r\n            verticalAlign: \"bottom\",\r\n          },\r\n          plotOptions: {\r\n            series: {\r\n              label: {\r\n                connectorAllowed: false,\r\n              },\r\n            },\r\n          },\r\n          series: forcastSeriesData,\r\n          responsive: {\r\n            rules: [\r\n              {\r\n                condition: {\r\n                  maxWidth: 500,\r\n                },\r\n                chartOptions: {\r\n                  legend: {\r\n                    layout: \"horizontal\",\r\n                    align: \"center\",\r\n                    verticalAlign: \"bottom\",\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n    // console.log(\"costDriver\", this.state.costDriver);\r\n    // console.log(this.state.products);\r\n    // console.log(\"MYPROPS\", this.props);\r\n    if (this.state.seriesName.length > 0) {\r\n      seriesData = this.state.seriesName.map((el, i) => {\r\n        return { index: i + 1, series: el.name };\r\n      });\r\n    }\r\n\r\n    // <Forcast />;\r\n    const productDialogFooter = (\r\n      <React.Fragment>\r\n        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n        <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveProduct} />\r\n      </React.Fragment>\r\n    );\r\n    const deleteProductDialogFooter = (\r\n      <React.Fragment>\r\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteProductDialog} />\r\n        <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteProduct} />\r\n      </React.Fragment>\r\n    );\r\n    const deleteProductsDialogFooter = (\r\n      <React.Fragment>\r\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteProductsDialog} />\r\n        <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedProducts} />\r\n      </React.Fragment>\r\n    );\r\n    \r\n\r\n\r\n    const historicalPricesOpthion = {\r\n      chart: {\r\n        zoomType: \"x\",\r\n      },\r\n      title: {\r\n        text: \"\",\r\n\r\n        align: \"center\",\r\n      },\r\n      yAxis: {\r\n        // type: \"datetime\",\r\n        title: {\r\n          text: \"USD/Ton\",\r\n        },\r\n      },\r\n      xAxis: {\r\n        type: \"datetime\",\r\n      },\r\n      legend: {\r\n        layout: \"horizontal\",\r\n        align: \"center\",\r\n        verticalAlign: \"bottom\",\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          label: {\r\n            connectorAllowed: false,\r\n          },\r\n          pointStart: 2010,\r\n        },\r\n      },\r\n      series: this.state.HistoricalChartData,\r\n      responsive: {\r\n        rules: [\r\n          {\r\n            condition: {\r\n              maxWidth: 500,\r\n            },\r\n            chartOptions: {\r\n              legend: {\r\n                layout: \"horizontal\",\r\n                align: \"center\",\r\n                verticalAlign: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n   const chartoptions = {\r\n\r\n      chart: {\r\n        type: \"spline\"\r\n      },\r\n      title: {\r\n        text: ''\r\n      },\r\n      series: [\r\n        {\r\n          data: [1,3,2,7,5,11,9]\r\n        }\r\n      ]\r\n      \r\n      \r\n    };\r\n    const chartoptions2 = {\r\n      chart: {\r\n        type: \"spline\"\r\n      },\r\n      title: {\r\n        text: ''\r\n      },\r\n      series: [\r\n        {\r\n          data: [3,1,2,8,5,1,9]\r\n        }\r\n      ]\r\n      \r\n      \r\n    };\r\n    const header2 = (\r\n      <div className=\"table-header-container\">\r\n         <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Enter Supplier Information </h5>\r\n      </div>\r\n  );\r\n  \r\n\r\n    return (\r\n      <div>\r\n         <AppTopbar onToggleMenu={\"onToggleMenu\"} />\r\n      <div className='layout-main'>\r\n \r\n        <div className=\"card \">\r\n        <h5 style={{ fontWeight:\"bolder\", fontFamily:'poppins' }}>Supplier Analysis</h5>\r\n          <div className=\"row\" style={{ display: \"flex\", justifyContent:'center', fontFamily: \"Poppins\" }}>\r\n            <div className=\"col-8\" style={{ width: \"63%\" }}>\r\n              <Toast ref={(el) => (this.toast = el)} />\r\n\r\n             \r\n\r\n              <DataTable\r\n                header={header2}\r\n                value={this.state.products}\r\n                paginator\r\n                rows={5}\r\n                rowsPerPageOptions={[5, 10, 20]}\r\n                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                editMode=\"row\"\r\n                dataKey=\"id\"\r\n                onRowEditInit={this.onRowEditInit}\r\n                onRowEditCancel={this.onRowEditCancel}\r\n              >\r\n                <Column field=\"name\" header=\"Supplier Name\" editor={(props) => this.nameEditor(\"products\", props)} />\r\n\r\n                <Column field=\"quantity\" header=\"Formula/Fixed Price\" editor={(props) => this.quatityEditor(\"products\", props)} />\r\n                <Column field=\"price\" header=\"Max Capacity\" editor={(props) => this.priceEditor(\"products\", props)} />\r\n                <Column field=\"Percentage\" header=\"Lead Time\" editor={(props) => this.leadTime(\"products\", props)} />\r\n                <Column\r\n                  rowEditor\r\n                  style={{ width: \"13%\" }}\r\n                  // headerStyle={{ width: \"7rem\" }}\r\n                  // bodyStyle={{ textAlign: \"center\" }}\r\n                ></Column>\r\n                <Column body={this.actionBodyTemplate} style={{ width: \"10%\" }}></Column>\r\n              </DataTable>\r\n              <div style={{ float: \"\",display:'flex',justifyContent:'space-between', margin: \"10px 30px\" }}>\r\n                <Button\r\n                label=\"Add More Supplier\"\r\n                icon=\"pi pi-plus\"\r\n               // className=\"p-mr-2\"\r\n               onClick={this.openNew}\r\n                 />\r\n                <Button\r\n                  className=\"btn btn-success btn-lg float-right\"\r\n                  // onClick={() => this.nextPath(\"/Forcast\")}\r\n                  label=\"Submit\"\r\n                  onClick={this.Onsave}\r\n                />\r\n               \r\n               \r\n              </div>\r\n            </div>\r\n\r\n            {/* ======================right coloumn=============================== */}\r\n           \r\n\r\n            {/* ===================================================== */}\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n        <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Historical Unit Prices</h5>\r\n                <div style={{ display: \"flex\", justifyContent:'center', margin: \"5px 10px\" ,fontFamily: \"Poppins\"}}>\r\n                  <Dropdown\r\n                    style={{ width: \"30%\", margin: \"5px 10px\" }}\r\n                    value={this.state.plant}\r\n                    options={this.plants}\r\n                    onChange={(e) => this.onPlantChange(e)}\r\n                    optionLabel=\"name\"\r\n                    placeholder=\"Choose Plants\"\r\n                    display=\"chip\"\r\n                  />\r\n\r\n                  <Dropdown\r\n                    style={{ width: \"30%\", margin: \"5px 10px\",fontFamily: \"Poppins\" }}\r\n                    value={this.state.costDriverSeries}\r\n                    options={this.seriesName}\r\n                    onChange={(e) => this.oncostDriverSeriesChange(e)}\r\n                    optionLabel=\"name\"\r\n                    placeholder=\"Region\"\r\n                    display=\"chip\"\r\n                  />\r\n                  {/* <Button\r\n                 label=\"submit\"\r\n                 style={{ margin: \"3px 15px\"  }}\r\n            /> */}\r\n                </div>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <HighchartsReact highcharts={Highcharts} options={historicalPricesOpthion} />\r\n                </div>\r\n                \r\n                <h5 style={{ fontWeight: \"bolder\", fontFamily: \"Poppins\" }}>Forecasted Supplier Priceing</h5>\r\n                <div style={{ width: \"100%\" }}>\r\n                  \r\n                  <HighchartsReact highcharts={Highcharts} options={forecastedSupplierPriceOpthin} />\r\n                </div>\r\n              </div>\r\n\r\n        {/* ===================================================== */}\r\n\r\n        <Dialog visible={this.state.productDialog} style={{ width: \"600px\" }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={this.hideDialog}>\r\n          <div className=\"p-field\">\r\n            <label htmlFor=\"Material_Number\">Supplier Name</label>\r\n            <Dropdown\r\n              id=\"name\"\r\n              value={this.state.product.name}\r\n              options={['A','B','C','D']}\r\n              onChange={(e) => this.onInputChange(e, \"name\")}\r\n              required\r\n              autoFocus\r\n              className={classNames({\r\n                \"p-invalid\": this.state.submitted && !this.state.product.name,\r\n              })}\r\n            />\r\n            {this.state.submitted && !this.state.product.name && <small className=\"p-error\">Supplier Name is required.</small>}\r\n          </div>\r\n\r\n          {/* <div className=\"p-formgrid p-grid\"> */}\r\n          <div className=\"p-field\">\r\n            <label htmlFor=\"quantity\">Formula/Fixed Price</label>\r\n            <InputText id=\"quantity\" value={this.state.product.quantity} onChange={(e) => this.onInputChange(e, \"quantity\")} required />\r\n            {this.state.submitted && !this.state.product.quantity && <small className=\"p-error\">Formula/Fixed Price is required.</small>}\r\n          </div>\r\n\r\n          <div className=\"p-field\">\r\n            <label htmlFor=\"price\">Max Capacity</label>\r\n            <InputText id=\"price\" value={this.state.product.price} onValueChange={(e) => this.onInputNumberChange(e, \"price\")} required />\r\n            {this.state.submitted && !this.state.product.price && <small className=\"p-error\">Max Capacity is required.</small>}\r\n          </div>\r\n\r\n          <div className=\"p-field\">\r\n            <label htmlFor=\"Percentage\">Lead Time</label>\r\n            <InputText id=\"Percentage\" value={this.state.product.Percentage} onValueChange={(e) => this.onInputNumberChange(e, \"Percentage\")} required />\r\n            {this.state.submitted && !this.state.product.Percentage && <small className=\"p-error\">Lead Time is required.</small>}\r\n          </div>\r\n          {/* </div> */}\r\n        </Dialog>\r\n\r\n        {/* ======================================================= */}\r\n\r\n        <Dialog visible={this.state.deleteProductDialog} style={{ width: \"450px\" }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={this.hideDeleteProductDialog}>\r\n          <div className=\"confirmation-content\">\r\n            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: \"2rem\" }} />\r\n            {this.state.product && (\r\n              <span>\r\n                Are you sure you want to delete <b>{this.state.product.name}</b>?\r\n              </span>\r\n            )}\r\n          </div>\r\n        </Dialog>\r\n\r\n        <Dialog visible={this.state.deleteProductsDialog} style={{ width: \"450px\" }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={this.hideDeleteProductsDialog}>\r\n          <div className=\"confirmation-content\">\r\n            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: \"2rem\" }} />\r\n            {this.state.product && <span>Are you sure you want to delete the selected products?</span>}\r\n          </div>\r\n        </Dialog>\r\n        <div style={{ display:'flex',justifyContent:'center' }}>\r\n        <a href='CostDriversAnalysis'>\r\n            <Button\r\n            className='previousbutton'\r\n              label=\"Previous\"\r\n              style={{ marginRight: \" 15px\"  }}\r\n            />\r\n            </a>\r\n        <a href='Inventory'>\r\n            <Button\r\n            className='nextbutton'\r\n              label=\"Next\"\r\n              style={{ marginLeft: \" 15px\"  }}\r\n              onClick = {this.optimize}\r\n            />\r\n            </a>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}